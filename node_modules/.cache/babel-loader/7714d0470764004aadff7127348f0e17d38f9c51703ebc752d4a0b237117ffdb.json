{"ast":null,"code":"/**\n * Module dependencies.\n */\n\nvar net = require('net');\nvar tls = require('tls');\nvar url = require('url');\nvar Agent = require('agent-base');\nvar inherits = require('util').inherits;\nvar debug = require('debug')('http-proxy-agent');\n\n/**\n * Module exports.\n */\n\nmodule.exports = HttpProxyAgent;\n\n/**\n * The `HttpProxyAgent` implements an HTTP Agent subclass that connects to the\n * specified \"HTTP proxy server\" in order to proxy HTTP requests.\n *\n * @api public\n */\n\nfunction HttpProxyAgent(opts) {\n  if (!(this instanceof HttpProxyAgent)) return new HttpProxyAgent(opts);\n  if ('string' == typeof opts) opts = url.parse(opts);\n  if (!opts) throw new Error('an HTTP(S) proxy server `host` and `port` must be specified!');\n  debug('creating new HttpProxyAgent instance: %o', opts);\n  Agent.call(this, opts);\n  var proxy = Object.assign({}, opts);\n\n  // if `true`, then connect to the proxy server over TLS. defaults to `false`.\n  this.secureProxy = proxy.protocol ? /^https:?$/i.test(proxy.protocol) : false;\n\n  // prefer `hostname` over `host`, and set the `port` if needed\n  proxy.host = proxy.hostname || proxy.host;\n  proxy.port = +proxy.port || (this.secureProxy ? 443 : 80);\n  if (proxy.host && proxy.path) {\n    // if both a `host` and `path` are specified then it's most likely the\n    // result of a `url.parse()` call... we need to remove the `path` portion so\n    // that `net.connect()` doesn't attempt to open that as a unix socket file.\n    delete proxy.path;\n    delete proxy.pathname;\n  }\n  this.proxy = proxy;\n}\ninherits(HttpProxyAgent, Agent);\n\n/**\n * Called when the node-core HTTP client library is creating a new HTTP request.\n *\n * @api public\n */\n\nHttpProxyAgent.prototype.callback = function connect(req, opts, fn) {\n  var proxy = this.proxy;\n\n  // change the `http.ClientRequest` instance's \"path\" field\n  // to the absolute path of the URL that will be requested\n  var parsed = url.parse(req.path);\n  if (null == parsed.protocol) parsed.protocol = 'http:';\n  if (null == parsed.hostname) parsed.hostname = opts.hostname || opts.host;\n  if (null == parsed.port) parsed.port = opts.port;\n  if (parsed.port == 80) {\n    // if port is 80, then we can remove the port so that the\n    // \":80\" portion is not on the produced URL\n    delete parsed.port;\n  }\n  var absolute = url.format(parsed);\n  req.path = absolute;\n\n  // inject the `Proxy-Authorization` header if necessary\n  if (proxy.auth) {\n    req.setHeader('Proxy-Authorization', 'Basic ' + Buffer.from(proxy.auth).toString('base64'));\n  }\n\n  // create a socket connection to the proxy server\n  var socket;\n  if (this.secureProxy) {\n    socket = tls.connect(proxy);\n  } else {\n    socket = net.connect(proxy);\n  }\n\n  // at this point, the http ClientRequest's internal `_header` field might have\n  // already been set. If this is the case then we'll need to re-generate the\n  // string since we just changed the `req.path`\n  if (req._header) {\n    debug('regenerating stored HTTP header string for request');\n    req._header = null;\n    req._implicitHeader();\n    if (req.output && req.output.length > 0) {\n      debug('patching connection write() output buffer with updated header');\n      // the _header has already been queued to be written to the socket\n      var first = req.output[0];\n      var endOfHeaders = first.indexOf('\\r\\n\\r\\n') + 4;\n      req.output[0] = req._header + first.substring(endOfHeaders);\n      debug('output buffer: %o', req.output);\n    }\n  }\n  fn(null, socket);\n};","map":{"version":3,"names":["net","require","tls","url","Agent","inherits","debug","module","exports","HttpProxyAgent","opts","parse","Error","call","proxy","Object","assign","secureProxy","protocol","test","host","hostname","port","path","pathname","prototype","callback","connect","req","fn","parsed","absolute","format","auth","setHeader","Buffer","from","toString","socket","_header","_implicitHeader","output","length","first","endOfHeaders","indexOf","substring"],"sources":["/Users/sathyamurthyt/Documents/Ai-forms/form-wizard/node_modules/pac-proxy-agent/node_modules/http-proxy-agent/index.js"],"sourcesContent":["\n/**\n * Module dependencies.\n */\n\nvar net = require('net');\nvar tls = require('tls');\nvar url = require('url');\nvar Agent = require('agent-base');\nvar inherits = require('util').inherits;\nvar debug = require('debug')('http-proxy-agent');\n\n/**\n * Module exports.\n */\n\nmodule.exports = HttpProxyAgent;\n\n/**\n * The `HttpProxyAgent` implements an HTTP Agent subclass that connects to the\n * specified \"HTTP proxy server\" in order to proxy HTTP requests.\n *\n * @api public\n */\n\nfunction HttpProxyAgent (opts) {\n  if (!(this instanceof HttpProxyAgent)) return new HttpProxyAgent(opts);\n  if ('string' == typeof opts) opts = url.parse(opts);\n  if (!opts) throw new Error('an HTTP(S) proxy server `host` and `port` must be specified!');\n  debug('creating new HttpProxyAgent instance: %o', opts);\n  Agent.call(this, opts);\n\n  var proxy = Object.assign({}, opts);\n\n  // if `true`, then connect to the proxy server over TLS. defaults to `false`.\n  this.secureProxy = proxy.protocol ? /^https:?$/i.test(proxy.protocol) : false;\n\n  // prefer `hostname` over `host`, and set the `port` if needed\n  proxy.host = proxy.hostname || proxy.host;\n  proxy.port = +proxy.port || (this.secureProxy ? 443 : 80);\n\n  if (proxy.host && proxy.path) {\n    // if both a `host` and `path` are specified then it's most likely the\n    // result of a `url.parse()` call... we need to remove the `path` portion so\n    // that `net.connect()` doesn't attempt to open that as a unix socket file.\n    delete proxy.path;\n    delete proxy.pathname;\n  }\n\n  this.proxy = proxy;\n}\ninherits(HttpProxyAgent, Agent);\n\n/**\n * Called when the node-core HTTP client library is creating a new HTTP request.\n *\n * @api public\n */\n\nHttpProxyAgent.prototype.callback = function connect (req, opts, fn) {\n  var proxy = this.proxy;\n\n  // change the `http.ClientRequest` instance's \"path\" field\n  // to the absolute path of the URL that will be requested\n  var parsed = url.parse(req.path);\n  if (null == parsed.protocol) parsed.protocol = 'http:';\n  if (null == parsed.hostname) parsed.hostname = opts.hostname || opts.host;\n  if (null == parsed.port) parsed.port = opts.port;\n  if (parsed.port == 80) {\n    // if port is 80, then we can remove the port so that the\n    // \":80\" portion is not on the produced URL\n    delete parsed.port;\n  }\n  var absolute = url.format(parsed);\n  req.path = absolute;\n\n  // inject the `Proxy-Authorization` header if necessary\n  if (proxy.auth) {\n    req.setHeader(\n      'Proxy-Authorization',\n      'Basic ' + Buffer.from(proxy.auth).toString('base64')\n    );\n  }\n\n  // create a socket connection to the proxy server\n  var socket;\n  if (this.secureProxy) {\n    socket = tls.connect(proxy);\n  } else {\n    socket = net.connect(proxy);\n  }\n\n  // at this point, the http ClientRequest's internal `_header` field might have\n  // already been set. If this is the case then we'll need to re-generate the\n  // string since we just changed the `req.path`\n  if (req._header) {\n    debug('regenerating stored HTTP header string for request');\n    req._header = null;\n    req._implicitHeader();\n    if (req.output && req.output.length > 0) {\n      debug('patching connection write() output buffer with updated header');\n      // the _header has already been queued to be written to the socket\n      var first = req.output[0];\n      var endOfHeaders = first.indexOf('\\r\\n\\r\\n') + 4;\n      req.output[0] = req._header + first.substring(endOfHeaders);\n      debug('output buffer: %o', req.output);\n    }\n  }\n\n  fn(null, socket);\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}