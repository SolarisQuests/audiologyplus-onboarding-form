{"ast":null,"code":"/**\n * Module dependencies.\n */\n\nvar fs = require('fs');\nvar uri2path = require('file-uri-to-path');\nvar NotFoundError = require('./notfound');\nvar NotModifiedError = require('./notmodified');\nvar debug = require('debug')('get-uri:file');\n\n/**\n * Module exports.\n */\n\nmodule.exports = get;\n\n/**\n * Returns a `fs.ReadStream` instance from a \"file:\" URI.\n *\n * @api protected\n */\n\nfunction get(parsed, opts, fn) {\n  var fd;\n  var cache = opts.cache;\n\n  // same as in fs.ReadStream's constructor\n  var flags = opts.hasOwnProperty('flags') ? options.flags : 'r';\n  var mode = opts.hasOwnProperty('mode') ? options.mode : 438; /*=0666*/\n\n  // convert URI → Path\n  var uri = parsed.href;\n  var filepath = uri2path(uri);\n  debug('normalized pathname: %o', filepath);\n\n  // open() first to get a fd and ensure that the file exists\n  fs.open(filepath, flags, mode, onopen);\n  function onerror(err) {\n    if ('number' == typeof fd) {\n      fs.close(fd, onclose);\n    }\n    fn(err);\n  }\n  function onclose() {\n    debug('closed fd %o', fd);\n  }\n  function onopen(err, _fd) {\n    if (err) {\n      if ('ENOENT' == err.code) {\n        err = new NotFoundError();\n      }\n      return onerror(err);\n    }\n    fd = _fd;\n\n    // now fstat() to check the `mtime` and store the stat object for the cache\n    fs.fstat(fd, onstat);\n  }\n  function onstat(err, stat) {\n    if (err) return onerror(err);\n\n    // if a `cache` was provided, check if the file has not been modified\n    if (cache && cache.stat && stat && isNotModified(cache.stat, stat)) {\n      return onerror(new NotModifiedError());\n    }\n\n    // `fs.ReadStream` takes care of calling `fs.close()` on the\n    // fd after it's done reading\n    opts.fd = fd;\n    var rs = fs.createReadStream(null, opts);\n    rs.stat = stat;\n    fn(null, rs);\n  }\n\n  // returns `true` if the `mtime` of the 2 stat objects are equal\n  function isNotModified(prev, curr) {\n    return +prev.mtime == +curr.mtime;\n  }\n}","map":{"version":3,"names":["fs","require","uri2path","NotFoundError","NotModifiedError","debug","module","exports","get","parsed","opts","fn","fd","cache","flags","hasOwnProperty","options","mode","uri","href","filepath","open","onopen","onerror","err","close","onclose","_fd","code","fstat","onstat","stat","isNotModified","rs","createReadStream","prev","curr","mtime"],"sources":["/Users/sathyamurthyt/Documents/Ai-forms/form-wizard/node_modules/get-uri/file.js"],"sourcesContent":["\n/**\n * Module dependencies.\n */\n\nvar fs = require('fs');\nvar uri2path = require('file-uri-to-path');\nvar NotFoundError = require('./notfound');\nvar NotModifiedError = require('./notmodified');\nvar debug = require('debug')('get-uri:file');\n\n/**\n * Module exports.\n */\n\nmodule.exports = get;\n\n/**\n * Returns a `fs.ReadStream` instance from a \"file:\" URI.\n *\n * @api protected\n */\n\nfunction get (parsed, opts, fn) {\n\n  var fd;\n  var cache = opts.cache;\n\n  // same as in fs.ReadStream's constructor\n  var flags = opts.hasOwnProperty('flags') ? options.flags : 'r';\n  var mode = opts.hasOwnProperty('mode') ? options.mode : 438; /*=0666*/\n\n  // convert URI → Path\n  var uri = parsed.href;\n  var filepath = uri2path(uri);\n  debug('normalized pathname: %o', filepath);\n\n  // open() first to get a fd and ensure that the file exists\n  fs.open(filepath, flags, mode, onopen);\n\n  function onerror (err) {\n    if ('number' == typeof fd) {\n      fs.close(fd, onclose);\n    }\n    fn(err);\n  }\n\n  function onclose () {\n    debug('closed fd %o', fd);\n  }\n\n  function onopen (err, _fd) {\n    if (err) {\n      if ('ENOENT' == err.code) {\n        err = new NotFoundError();\n      }\n      return onerror(err);\n    }\n    fd = _fd;\n\n    // now fstat() to check the `mtime` and store the stat object for the cache\n    fs.fstat(fd, onstat);\n  }\n\n  function onstat (err, stat) {\n    if (err) return onerror(err);\n\n    // if a `cache` was provided, check if the file has not been modified\n    if (cache && cache.stat && stat && isNotModified(cache.stat, stat)) {\n      return onerror(new NotModifiedError());\n    }\n\n    // `fs.ReadStream` takes care of calling `fs.close()` on the\n    // fd after it's done reading\n    opts.fd = fd;\n    var rs = fs.createReadStream(null, opts);\n    rs.stat = stat;\n\n    fn(null, rs);\n  }\n\n  // returns `true` if the `mtime` of the 2 stat objects are equal\n  function isNotModified (prev, curr) {\n    return +prev.mtime == +curr.mtime;\n  }\n}\n"],"mappings":"AACA;AACA;AACA;;AAEA,IAAIA,EAAE,GAAGC,OAAO,CAAC,IAAI,CAAC;AACtB,IAAIC,QAAQ,GAAGD,OAAO,CAAC,kBAAkB,CAAC;AAC1C,IAAIE,aAAa,GAAGF,OAAO,CAAC,YAAY,CAAC;AACzC,IAAIG,gBAAgB,GAAGH,OAAO,CAAC,eAAe,CAAC;AAC/C,IAAII,KAAK,GAAGJ,OAAO,CAAC,OAAO,CAAC,CAAC,cAAc,CAAC;;AAE5C;AACA;AACA;;AAEAK,MAAM,CAACC,OAAO,GAAGC,GAAG;;AAEpB;AACA;AACA;AACA;AACA;;AAEA,SAASA,GAAGA,CAAEC,MAAM,EAAEC,IAAI,EAAEC,EAAE,EAAE;EAE9B,IAAIC,EAAE;EACN,IAAIC,KAAK,GAAGH,IAAI,CAACG,KAAK;;EAEtB;EACA,IAAIC,KAAK,GAAGJ,IAAI,CAACK,cAAc,CAAC,OAAO,CAAC,GAAGC,OAAO,CAACF,KAAK,GAAG,GAAG;EAC9D,IAAIG,IAAI,GAAGP,IAAI,CAACK,cAAc,CAAC,MAAM,CAAC,GAAGC,OAAO,CAACC,IAAI,GAAG,GAAG,CAAC,CAAC;;EAE7D;EACA,IAAIC,GAAG,GAAGT,MAAM,CAACU,IAAI;EACrB,IAAIC,QAAQ,GAAGlB,QAAQ,CAACgB,GAAG,CAAC;EAC5Bb,KAAK,CAAC,yBAAyB,EAAEe,QAAQ,CAAC;;EAE1C;EACApB,EAAE,CAACqB,IAAI,CAACD,QAAQ,EAAEN,KAAK,EAAEG,IAAI,EAAEK,MAAM,CAAC;EAEtC,SAASC,OAAOA,CAAEC,GAAG,EAAE;IACrB,IAAI,QAAQ,IAAI,OAAOZ,EAAE,EAAE;MACzBZ,EAAE,CAACyB,KAAK,CAACb,EAAE,EAAEc,OAAO,CAAC;IACvB;IACAf,EAAE,CAACa,GAAG,CAAC;EACT;EAEA,SAASE,OAAOA,CAAA,EAAI;IAClBrB,KAAK,CAAC,cAAc,EAAEO,EAAE,CAAC;EAC3B;EAEA,SAASU,MAAMA,CAAEE,GAAG,EAAEG,GAAG,EAAE;IACzB,IAAIH,GAAG,EAAE;MACP,IAAI,QAAQ,IAAIA,GAAG,CAACI,IAAI,EAAE;QACxBJ,GAAG,GAAG,IAAIrB,aAAa,CAAC,CAAC;MAC3B;MACA,OAAOoB,OAAO,CAACC,GAAG,CAAC;IACrB;IACAZ,EAAE,GAAGe,GAAG;;IAER;IACA3B,EAAE,CAAC6B,KAAK,CAACjB,EAAE,EAAEkB,MAAM,CAAC;EACtB;EAEA,SAASA,MAAMA,CAAEN,GAAG,EAAEO,IAAI,EAAE;IAC1B,IAAIP,GAAG,EAAE,OAAOD,OAAO,CAACC,GAAG,CAAC;;IAE5B;IACA,IAAIX,KAAK,IAAIA,KAAK,CAACkB,IAAI,IAAIA,IAAI,IAAIC,aAAa,CAACnB,KAAK,CAACkB,IAAI,EAAEA,IAAI,CAAC,EAAE;MAClE,OAAOR,OAAO,CAAC,IAAInB,gBAAgB,CAAC,CAAC,CAAC;IACxC;;IAEA;IACA;IACAM,IAAI,CAACE,EAAE,GAAGA,EAAE;IACZ,IAAIqB,EAAE,GAAGjC,EAAE,CAACkC,gBAAgB,CAAC,IAAI,EAAExB,IAAI,CAAC;IACxCuB,EAAE,CAACF,IAAI,GAAGA,IAAI;IAEdpB,EAAE,CAAC,IAAI,EAAEsB,EAAE,CAAC;EACd;;EAEA;EACA,SAASD,aAAaA,CAAEG,IAAI,EAAEC,IAAI,EAAE;IAClC,OAAO,CAACD,IAAI,CAACE,KAAK,IAAI,CAACD,IAAI,CAACC,KAAK;EACnC;AACF","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}