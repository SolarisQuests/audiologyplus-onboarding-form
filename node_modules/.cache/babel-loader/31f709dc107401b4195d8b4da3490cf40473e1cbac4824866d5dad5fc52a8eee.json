{"ast":null,"code":"const DecodeStream = require('./DecodeStream');\nclass NumberT {\n  constructor(type, endian = 'BE') {\n    this.type = type;\n    this.endian = endian;\n    this.fn = this.type;\n    if (this.type[this.type.length - 1] !== '8') {\n      this.fn += this.endian;\n    }\n  }\n  size() {\n    return DecodeStream.TYPES[this.type];\n  }\n  decode(stream) {\n    return stream[`read${this.fn}`]();\n  }\n  encode(stream, val) {\n    return stream[`write${this.fn}`](val);\n  }\n}\nexports.Number = NumberT;\nexports.uint8 = new NumberT('UInt8');\nexports.uint16be = exports.uint16 = new NumberT('UInt16', 'BE');\nexports.uint16le = new NumberT('UInt16', 'LE');\nexports.uint24be = exports.uint24 = new NumberT('UInt24', 'BE');\nexports.uint24le = new NumberT('UInt24', 'LE');\nexports.uint32be = exports.uint32 = new NumberT('UInt32', 'BE');\nexports.uint32le = new NumberT('UInt32', 'LE');\nexports.int8 = new NumberT('Int8');\nexports.int16be = exports.int16 = new NumberT('Int16', 'BE');\nexports.int16le = new NumberT('Int16', 'LE');\nexports.int24be = exports.int24 = new NumberT('Int24', 'BE');\nexports.int24le = new NumberT('Int24', 'LE');\nexports.int32be = exports.int32 = new NumberT('Int32', 'BE');\nexports.int32le = new NumberT('Int32', 'LE');\nexports.floatbe = exports.float = new NumberT('Float', 'BE');\nexports.floatle = new NumberT('Float', 'LE');\nexports.doublebe = exports.double = new NumberT('Double', 'BE');\nexports.doublele = new NumberT('Double', 'LE');\nclass Fixed extends NumberT {\n  constructor(size, endian, fracBits = size >> 1) {\n    super(`Int${size}`, endian);\n    this._point = 1 << fracBits;\n  }\n  decode(stream) {\n    return super.decode(stream) / this._point;\n  }\n  encode(stream, val) {\n    return super.encode(stream, val * this._point | 0);\n  }\n}\nexports.Fixed = Fixed;\nexports.fixed16be = exports.fixed16 = new Fixed(16, 'BE');\nexports.fixed16le = new Fixed(16, 'LE');\nexports.fixed32be = exports.fixed32 = new Fixed(32, 'BE');\nexports.fixed32le = new Fixed(32, 'LE');","map":{"version":3,"names":["DecodeStream","require","NumberT","constructor","type","endian","fn","length","size","TYPES","decode","stream","encode","val","exports","Number","uint8","uint16be","uint16","uint16le","uint24be","uint24","uint24le","uint32be","uint32","uint32le","int8","int16be","int16","int16le","int24be","int24","int24le","int32be","int32","int32le","floatbe","float","floatle","doublebe","double","doublele","Fixed","fracBits","_point","fixed16be","fixed16","fixed16le","fixed32be","fixed32","fixed32le"],"sources":["/Users/sathyamurthyt/Documents/Ai-forms/form-wizard/node_modules/pdfkit/node_modules/restructure/src/Number.js"],"sourcesContent":["const DecodeStream = require('./DecodeStream');\n\nclass NumberT {\n  constructor(type, endian = 'BE') {\n    this.type = type;\n    this.endian = endian;\n    this.fn = this.type;\n    if (this.type[this.type.length - 1] !== '8') {\n      this.fn += this.endian;\n    }\n  }\n\n  size() {\n    return DecodeStream.TYPES[this.type];\n  }\n\n  decode(stream) {\n    return stream[`read${this.fn}`]();\n  }\n\n  encode(stream, val) {\n    return stream[`write${this.fn}`](val);\n  }\n}\n\nexports.Number = NumberT;\nexports.uint8 = new NumberT('UInt8');\nexports.uint16be = (exports.uint16 = new NumberT('UInt16', 'BE'));\nexports.uint16le = new NumberT('UInt16', 'LE');\nexports.uint24be = (exports.uint24 = new NumberT('UInt24', 'BE'));\nexports.uint24le = new NumberT('UInt24', 'LE');\nexports.uint32be = (exports.uint32 = new NumberT('UInt32', 'BE'));\nexports.uint32le = new NumberT('UInt32', 'LE');\nexports.int8 = new NumberT('Int8');\nexports.int16be = (exports.int16 = new NumberT('Int16', 'BE'));\nexports.int16le = new NumberT('Int16', 'LE');\nexports.int24be = (exports.int24 = new NumberT('Int24', 'BE'));\nexports.int24le = new NumberT('Int24', 'LE');\nexports.int32be = (exports.int32 = new NumberT('Int32', 'BE'));\nexports.int32le = new NumberT('Int32', 'LE');\nexports.floatbe = (exports.float = new NumberT('Float', 'BE'));\nexports.floatle = new NumberT('Float', 'LE');\nexports.doublebe = (exports.double = new NumberT('Double', 'BE'));\nexports.doublele = new NumberT('Double', 'LE');\n\nclass Fixed extends NumberT {\n  constructor(size, endian, fracBits = size >> 1) {\n    super(`Int${size}`, endian);\n    this._point = 1 << fracBits;\n  }\n\n  decode(stream) {\n    return super.decode(stream) / this._point;\n  }\n\n  encode(stream, val) {\n    return super.encode(stream, (val * this._point) | 0);\n  }\n}\n\nexports.Fixed = Fixed;\nexports.fixed16be = (exports.fixed16 = new Fixed(16, 'BE'));\nexports.fixed16le = new Fixed(16, 'LE');\nexports.fixed32be = (exports.fixed32 =new Fixed(32, 'BE'));\nexports.fixed32le = new Fixed(32, 'LE');\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}