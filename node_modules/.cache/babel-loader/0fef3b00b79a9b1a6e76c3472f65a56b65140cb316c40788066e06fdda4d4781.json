{"ast":null,"code":"let iconv;\nconst stream = require('stream');\nconst DecodeStream = require('./DecodeStream');\ntry {\n  iconv = require('iconv-lite');\n} catch (error) {}\nclass EncodeStream extends stream.Readable {\n  constructor(bufferSize = 65536) {\n    super(...arguments);\n    this.buffer = Buffer.alloc(bufferSize);\n    this.bufferOffset = 0;\n    this.pos = 0;\n  }\n\n  // do nothing, required by node\n  _read() {}\n  ensure(bytes) {\n    if (this.bufferOffset + bytes > this.buffer.length) {\n      return this.flush();\n    }\n  }\n  flush() {\n    if (this.bufferOffset > 0) {\n      this.push(Buffer.from(this.buffer.slice(0, this.bufferOffset)));\n      return this.bufferOffset = 0;\n    }\n  }\n  writeBuffer(buffer) {\n    this.flush();\n    this.push(buffer);\n    return this.pos += buffer.length;\n  }\n  writeString(string, encoding = 'ascii') {\n    switch (encoding) {\n      case 'utf16le':\n      case 'ucs2':\n      case 'utf8':\n      case 'ascii':\n        return this.writeBuffer(Buffer.from(string, encoding));\n      case 'utf16be':\n        var buf = Buffer.from(string, 'utf16le');\n\n        // swap the bytes\n        for (let i = 0, end = buf.length - 1; i < end; i += 2) {\n          const byte = buf[i];\n          buf[i] = buf[i + 1];\n          buf[i + 1] = byte;\n        }\n        return this.writeBuffer(buf);\n      default:\n        if (iconv) {\n          return this.writeBuffer(iconv.encode(string, encoding));\n        } else {\n          throw new Error('Install iconv-lite to enable additional string encodings.');\n        }\n    }\n  }\n  writeUInt24BE(val) {\n    this.ensure(3);\n    this.buffer[this.bufferOffset++] = val >>> 16 & 0xff;\n    this.buffer[this.bufferOffset++] = val >>> 8 & 0xff;\n    this.buffer[this.bufferOffset++] = val & 0xff;\n    return this.pos += 3;\n  }\n  writeUInt24LE(val) {\n    this.ensure(3);\n    this.buffer[this.bufferOffset++] = val & 0xff;\n    this.buffer[this.bufferOffset++] = val >>> 8 & 0xff;\n    this.buffer[this.bufferOffset++] = val >>> 16 & 0xff;\n    return this.pos += 3;\n  }\n  writeInt24BE(val) {\n    if (val >= 0) {\n      return this.writeUInt24BE(val);\n    } else {\n      return this.writeUInt24BE(val + 0xffffff + 1);\n    }\n  }\n  writeInt24LE(val) {\n    if (val >= 0) {\n      return this.writeUInt24LE(val);\n    } else {\n      return this.writeUInt24LE(val + 0xffffff + 1);\n    }\n  }\n  fill(val, length) {\n    if (length < this.buffer.length) {\n      this.ensure(length);\n      this.buffer.fill(val, this.bufferOffset, this.bufferOffset + length);\n      this.bufferOffset += length;\n      return this.pos += length;\n    } else {\n      const buf = Buffer.alloc(length);\n      buf.fill(val);\n      return this.writeBuffer(buf);\n    }\n  }\n  end() {\n    this.flush();\n    return this.push(null);\n  }\n}\nfor (let key in Buffer.prototype) {\n  if (key.slice(0, 5) === 'write') {\n    const bytes = +DecodeStream.TYPES[key.replace(/write|[BL]E/g, '')];\n    EncodeStream.prototype[key] = function (value) {\n      this.ensure(bytes);\n      this.buffer[key](value, this.bufferOffset);\n      this.bufferOffset += bytes;\n      return this.pos += bytes;\n    };\n  }\n}\nmodule.exports = EncodeStream;","map":{"version":3,"names":["iconv","stream","require","DecodeStream","error","EncodeStream","Readable","constructor","bufferSize","arguments","buffer","Buffer","alloc","bufferOffset","pos","_read","ensure","bytes","length","flush","push","from","slice","writeBuffer","writeString","string","encoding","buf","i","end","byte","encode","Error","writeUInt24BE","val","writeUInt24LE","writeInt24BE","writeInt24LE","fill","key","prototype","TYPES","replace","value","module","exports"],"sources":["/Users/sathyamurthyt/Documents/Ai-forms/form-wizard/node_modules/pdfkit/node_modules/restructure/src/EncodeStream.js"],"sourcesContent":["let iconv;\nconst stream = require('stream');\nconst DecodeStream = require('./DecodeStream');\ntry { iconv = require('iconv-lite'); } catch (error) {}\n\nclass EncodeStream extends stream.Readable {\n  constructor(bufferSize =  65536) {\n    super(...arguments);\n    this.buffer = Buffer.alloc(bufferSize);\n    this.bufferOffset = 0;\n    this.pos = 0;\n  }\n\n  // do nothing, required by node\n  _read() {}\n\n  ensure(bytes) {\n    if ((this.bufferOffset + bytes) > this.buffer.length) {\n      return this.flush();\n    }\n  }\n\n  flush() {\n    if (this.bufferOffset > 0) {\n      this.push(Buffer.from(this.buffer.slice(0, this.bufferOffset)));\n      return this.bufferOffset = 0;\n    }\n  }\n\n  writeBuffer(buffer) {\n    this.flush();\n    this.push(buffer);\n    return this.pos += buffer.length;\n  }\n\n  writeString(string, encoding = 'ascii') {\n    switch (encoding) {\n      case 'utf16le': case 'ucs2': case 'utf8': case 'ascii':\n        return this.writeBuffer(Buffer.from(string, encoding));\n\n      case 'utf16be':\n        var buf = Buffer.from(string, 'utf16le');\n\n        // swap the bytes\n        for (let i = 0, end = buf.length - 1; i < end; i += 2) {\n          const byte = buf[i];\n          buf[i] = buf[i + 1];\n          buf[i + 1] = byte;\n        }\n\n        return this.writeBuffer(buf);\n\n      default:\n        if (iconv) {\n          return this.writeBuffer(iconv.encode(string, encoding));\n        } else {\n          throw new Error('Install iconv-lite to enable additional string encodings.');\n        }\n    }\n  }\n\n  writeUInt24BE(val) {\n    this.ensure(3);\n    this.buffer[this.bufferOffset++] = (val >>> 16) & 0xff;\n    this.buffer[this.bufferOffset++] = (val >>> 8)  & 0xff;\n    this.buffer[this.bufferOffset++] = val & 0xff;\n    return this.pos += 3;\n  }\n\n  writeUInt24LE(val) {\n    this.ensure(3);\n    this.buffer[this.bufferOffset++] = val & 0xff;\n    this.buffer[this.bufferOffset++] = (val >>> 8) & 0xff;\n    this.buffer[this.bufferOffset++] = (val >>> 16) & 0xff;\n    return this.pos += 3;\n  }\n\n  writeInt24BE(val) {\n    if (val >= 0) {\n      return this.writeUInt24BE(val);\n    } else {\n      return this.writeUInt24BE(val + 0xffffff + 1);\n    }\n  }\n\n  writeInt24LE(val) {\n    if (val >= 0) {\n      return this.writeUInt24LE(val);\n    } else {\n      return this.writeUInt24LE(val + 0xffffff + 1);\n    }\n  }\n\n  fill(val, length) {\n    if (length < this.buffer.length) {\n      this.ensure(length);\n      this.buffer.fill(val, this.bufferOffset, this.bufferOffset + length);\n      this.bufferOffset += length;\n      return this.pos += length;\n    } else {\n      const buf = Buffer.alloc(length);\n      buf.fill(val);\n      return this.writeBuffer(buf);\n    }\n  }\n\n  end() {\n    this.flush();\n    return this.push(null);\n  }\n}\n\nfor (let key in Buffer.prototype) {\n  if (key.slice(0, 5) === 'write') {\n    const bytes = +DecodeStream.TYPES[key.replace(/write|[BL]E/g, '')];\n    EncodeStream.prototype[key] = function(value) {\n      this.ensure(bytes);\n      this.buffer[key](value, this.bufferOffset);\n      this.bufferOffset += bytes;\n      return this.pos += bytes;\n    };\n  }\n}\n\nmodule.exports = EncodeStream;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}