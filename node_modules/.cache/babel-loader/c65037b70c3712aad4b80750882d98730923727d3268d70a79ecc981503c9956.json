{"ast":null,"code":"'use strict';\n\n/**\n * Module dependencies.\n */\nvar co = require('co');\nvar vm = require('vm');\nvar parse = require('url').parse;\nvar thunkify = require('thunkify');\nvar degenerator = require('degenerator');\n\n/**\n * Built-in PAC functions.\n */\n\nvar dateRange = require('./dateRange');\nvar dnsDomainIs = require('./dnsDomainIs');\nvar dnsDomainLevels = require('./dnsDomainLevels');\nvar dnsResolve = require('./dnsResolve');\nvar isInNet = require('./isInNet');\nvar isPlainHostName = require('./isPlainHostName');\nvar isResolvable = require('./isResolvable');\nvar localHostOrDomainIs = require('./localHostOrDomainIs');\nvar myIpAddress = require('./myIpAddress');\nvar shExpMatch = require('./shExpMatch');\nvar timeRange = require('./timeRange');\nvar weekdayRange = require('./weekdayRange');\n\n/**\n * Module exports.\n */\n\nmodule.exports = generate;\n\n/**\n * Returns an asyncronous `FindProxyForURL` function from the\n * given JS string (from a PAC file).\n *\n * @param {String} str JS string\n * @param {Object} opts optional \"options\" object\n * @return {Function} async resolver function\n */\n\nfunction generate(_str, opts) {\n  var i;\n  var str = String(_str);\n\n  // the sandbox to use for the vm\n  var sandbox = {\n    dateRange: dateRange,\n    dnsDomainIs: dnsDomainIs,\n    dnsDomainLevels: dnsDomainLevels,\n    dnsResolve: dnsResolve,\n    isInNet: isInNet,\n    isPlainHostName: isPlainHostName,\n    isResolvable: isResolvable,\n    localHostOrDomainIs: localHostOrDomainIs,\n    myIpAddress: myIpAddress,\n    shExpMatch: shExpMatch,\n    timeRange: timeRange,\n    weekdayRange: weekdayRange\n  };\n\n  // copy the properties from the user-provided `sandbox` onto ours\n  if (opts && opts.sandbox) {\n    for (i in opts.sandbox) {\n      sandbox[i] = opts.sandbox[i];\n    }\n  }\n\n  // construct the array of async function names to add `yield` calls to.\n  // user-provided async functions added to the `sandbox` must have an\n  // `async = true` property set on the function instance\n  var names = [];\n  for (i in sandbox) {\n    if (sandbox[i].async) {\n      names.push(i);\n      sandbox[i] = thunkify(sandbox[i]);\n    }\n  }\n  //console.log(names);\n\n  // convert the JS FindProxyForURL function into a generator function\n  var js = degenerator(str, names);\n\n  // filename of the pac file for the vm\n  var filename = opts && opts.filename || 'proxy.pac';\n\n  // evaluate the JS string and extract the FindProxyForURL generator function\n  var fn = vm.runInNewContext(js + ';FindProxyForURL', sandbox, filename);\n  if ('function' != typeof fn) {\n    throw new TypeError('PAC file JavaScript contents must define a `FindProxyForURL` function');\n  }\n\n  // return the async resolver function\n  var resolver = co.wrap(fn);\n  return function FindProxyForURL(url, _host, _callback) {\n    let host;\n    let callback;\n    switch (arguments.length) {\n      case 3:\n        host = _host;\n        callback = _callback;\n        break;\n      case 2:\n        if (typeof _host === 'function') {\n          callback = _host;\n        } else {\n          host = _host;\n        }\n        break;\n    }\n    if (!host) {\n      host = parse(url).hostname;\n    }\n    const promise = resolver(url, host, callback);\n    if (typeof callback === 'function') {\n      toCallback(promise, callback);\n    } else {\n      return promise;\n    }\n  };\n}\nfunction toCallback(promise, callback) {\n  let called = false;\n  function resolve(rtn) {\n    if (called) return;\n    called = true;\n    callback(null, rtn);\n  }\n  function reject(err) {\n    if (called) return;\n    called = true;\n    callback(err);\n  }\n  promise.then(resolve, reject);\n}","map":{"version":3,"names":["co","require","vm","parse","thunkify","degenerator","dateRange","dnsDomainIs","dnsDomainLevels","dnsResolve","isInNet","isPlainHostName","isResolvable","localHostOrDomainIs","myIpAddress","shExpMatch","timeRange","weekdayRange","module","exports","generate","_str","opts","i","str","String","sandbox","names","async","push","js","filename","fn","runInNewContext","TypeError","resolver","wrap","FindProxyForURL","url","_host","_callback","host","callback","arguments","length","hostname","promise","toCallback","called","resolve","rtn","reject","err","then"],"sources":["/Users/sathyamurthyt/Documents/Ai-forms/form-wizard/node_modules/pac-resolver/index.js"],"sourcesContent":["'use strict';\n\n/**\n * Module dependencies.\n */\n\nvar co = require('co');\nvar vm = require('vm');\nvar parse = require('url').parse;\nvar thunkify = require('thunkify');\nvar degenerator = require('degenerator');\n\n/**\n * Built-in PAC functions.\n */\n\nvar dateRange = require('./dateRange');\nvar dnsDomainIs = require('./dnsDomainIs');\nvar dnsDomainLevels = require('./dnsDomainLevels');\nvar dnsResolve = require('./dnsResolve');\nvar isInNet = require('./isInNet');\nvar isPlainHostName = require('./isPlainHostName');\nvar isResolvable = require('./isResolvable');\nvar localHostOrDomainIs = require('./localHostOrDomainIs');\nvar myIpAddress = require('./myIpAddress');\nvar shExpMatch = require('./shExpMatch');\nvar timeRange = require('./timeRange');\nvar weekdayRange = require('./weekdayRange');\n\n/**\n * Module exports.\n */\n\nmodule.exports = generate;\n\n/**\n * Returns an asyncronous `FindProxyForURL` function from the\n * given JS string (from a PAC file).\n *\n * @param {String} str JS string\n * @param {Object} opts optional \"options\" object\n * @return {Function} async resolver function\n */\n\nfunction generate (_str, opts) {\n  var i;\n  var str = String(_str)\n\n  // the sandbox to use for the vm\n  var sandbox = {\n    dateRange: dateRange,\n    dnsDomainIs: dnsDomainIs,\n    dnsDomainLevels: dnsDomainLevels,\n    dnsResolve: dnsResolve,\n    isInNet: isInNet,\n    isPlainHostName: isPlainHostName,\n    isResolvable: isResolvable,\n    localHostOrDomainIs: localHostOrDomainIs,\n    myIpAddress: myIpAddress,\n    shExpMatch: shExpMatch,\n    timeRange: timeRange,\n    weekdayRange: weekdayRange\n  };\n\n  // copy the properties from the user-provided `sandbox` onto ours\n  if (opts && opts.sandbox) {\n    for (i in opts.sandbox) {\n      sandbox[i] = opts.sandbox[i];\n    }\n  }\n\n  // construct the array of async function names to add `yield` calls to.\n  // user-provided async functions added to the `sandbox` must have an\n  // `async = true` property set on the function instance\n  var names = [];\n  for (i in sandbox) {\n    if (sandbox[i].async) {\n      names.push(i);\n      sandbox[i] = thunkify(sandbox[i]);\n    }\n  }\n  //console.log(names);\n\n  // convert the JS FindProxyForURL function into a generator function\n  var js = degenerator(str, names);\n\n  // filename of the pac file for the vm\n  var filename = (opts && opts.filename) || 'proxy.pac';\n\n  // evaluate the JS string and extract the FindProxyForURL generator function\n  var fn = vm.runInNewContext(js + ';FindProxyForURL', sandbox, filename);\n  if ('function' != typeof fn) {\n    throw new TypeError('PAC file JavaScript contents must define a `FindProxyForURL` function');\n  }\n\n  // return the async resolver function\n  var resolver = co.wrap(fn);\n\n  return function FindProxyForURL (url, _host, _callback) {\n    let host\n    let callback\n    switch (arguments.length) {\n      case 3:\n        host = _host\n        callback = _callback\n        break;\n      case 2:\n        if (typeof _host === 'function') {\n          callback = _host\n        } else {\n          host = _host\n        }\n        break;\n    }\n\n    if (!host) {\n      host = parse(url).hostname;\n    }\n\n    const promise = resolver(url, host, callback);\n\n    if (typeof callback === 'function') {\n      toCallback(promise, callback)\n    } else {\n      return promise\n    }\n  };\n}\n\nfunction toCallback (promise, callback) {\n  let called = false\n  function resolve(rtn) {\n    if (called) return\n    called = true\n    callback(null, rtn)\n  }\n  function reject(err) {\n    if (called) return\n    called = true\n    callback(err)\n  }\n  promise.then(resolve, reject)\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}