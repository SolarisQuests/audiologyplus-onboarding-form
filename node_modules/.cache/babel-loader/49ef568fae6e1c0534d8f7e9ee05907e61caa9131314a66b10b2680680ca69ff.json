{"ast":null,"code":"/**\n * Module exports.\n */\n\nmodule.exports = weekdayRange;\n\n/**\n * Only the first parameter is mandatory. Either the second, the third, or both\n * may be left out.\n *\n * If only one parameter is present, the function yeilds a true value on the\n * weekday that the parameter represents. If the string \"GMT\" is specified as\n * a second parameter, times are taken to be in GMT, otherwise in local timezone.\n *\n * If both wd1 and wd1 are defined, the condition is true if the current weekday\n * is in between those two weekdays. Bounds are inclusive. If the \"GMT\" parameter\n * is specified, times are taken to be in GMT, otherwise the local timezone is\n * used.\n *\n * Valid \"weekday strings\" are:\n *\n *     SUN MON TUE WED THU FRI SAT\n *\n * Examples:\n *\n * ``` js\n * weekdayRange(\"MON\", \"FRI\")\n * true Monday trhough Friday (local timezone).\n *\n * weekdayRange(\"MON\", \"FRI\", \"GMT\")\n * same as above, but GMT timezone.\n *\n * weekdayRange(\"SAT\")\n * true on Saturdays local time.\n *\n * weekdayRange(\"SAT\", \"GMT\")\n * true on Saturdays GMT time.\n *\n * weekdayRange(\"FRI\", \"MON\")\n * true Friday through Monday (note, order does matter!).\n * ```\n *\n * \n * @param {String} wd1 one of the weekday strings.\n * @param {String} wd2 one of the weekday strings.\n * @param {String} gmt is either the string: GMT or is left out.\n * @return {Boolean}\n */\n\nconst dayOrder = {\n  \"SUN\": 0,\n  \"MON\": 1,\n  \"TUE\": 2,\n  \"WED\": 3,\n  \"THU\": 4,\n  \"FRI\": 5,\n  \"SAT\": 6\n};\nfunction weekdayRange(wd1, wd2, gmt) {\n  var useGMTzone = wd2 == \"GMT\" || gmt == \"GMT\",\n    todaysDay = getTodaysDay(useGMTzone),\n    wd1Index = dayOrder[wd1] || -1,\n    wd2Index = dayOrder[wd2] || -1,\n    result = false;\n  if (wd2Index < 0) {\n    result = todaysDay == wd1Index;\n  } else {\n    if (wd1Index <= wd2Index) {\n      result = valueInRange(wd1Index, todaysDay, wd2Index);\n    } else {\n      result = valueInRange(wd1Index, todaysDay, 6) || valueInRange(0, todaysDay, wd2Index);\n    }\n  }\n  return result;\n}\nfunction getTodaysDay(gmt) {\n  return gmt ? new Date().getUTCDay() : new Date().getDay();\n}\n\n// start <= value <= finish\nfunction valueInRange(start, value, finish) {\n  return start <= value && value <= finish;\n}","map":{"version":3,"names":["module","exports","weekdayRange","dayOrder","wd1","wd2","gmt","useGMTzone","todaysDay","getTodaysDay","wd1Index","wd2Index","result","valueInRange","Date","getUTCDay","getDay","start","value","finish"],"sources":["/Users/sathyamurthyt/Documents/Ai-forms/form-wizard/node_modules/pac-resolver/weekdayRange.js"],"sourcesContent":["\n/**\n * Module exports.\n */\n\nmodule.exports = weekdayRange;\n\n/**\n * Only the first parameter is mandatory. Either the second, the third, or both\n * may be left out.\n *\n * If only one parameter is present, the function yeilds a true value on the\n * weekday that the parameter represents. If the string \"GMT\" is specified as\n * a second parameter, times are taken to be in GMT, otherwise in local timezone.\n *\n * If both wd1 and wd1 are defined, the condition is true if the current weekday\n * is in between those two weekdays. Bounds are inclusive. If the \"GMT\" parameter\n * is specified, times are taken to be in GMT, otherwise the local timezone is\n * used.\n *\n * Valid \"weekday strings\" are:\n *\n *     SUN MON TUE WED THU FRI SAT\n *\n * Examples:\n *\n * ``` js\n * weekdayRange(\"MON\", \"FRI\")\n * true Monday trhough Friday (local timezone).\n *\n * weekdayRange(\"MON\", \"FRI\", \"GMT\")\n * same as above, but GMT timezone.\n *\n * weekdayRange(\"SAT\")\n * true on Saturdays local time.\n *\n * weekdayRange(\"SAT\", \"GMT\")\n * true on Saturdays GMT time.\n *\n * weekdayRange(\"FRI\", \"MON\")\n * true Friday through Monday (note, order does matter!).\n * ```\n *\n * \n * @param {String} wd1 one of the weekday strings.\n * @param {String} wd2 one of the weekday strings.\n * @param {String} gmt is either the string: GMT or is left out.\n * @return {Boolean}\n */\n\nconst dayOrder = { \"SUN\": 0, \"MON\": 1, \"TUE\": 2, \"WED\": 3, \"THU\": 4, \"FRI\": 5, \"SAT\": 6 };\n\nfunction weekdayRange (wd1, wd2, gmt) {\n\n  var useGMTzone = (wd2 == \"GMT\" || gmt == \"GMT\"),\n      todaysDay  = getTodaysDay(useGMTzone),\n      wd1Index   = dayOrder[wd1] || -1,\n      wd2Index   = dayOrder[wd2] || -1,\n      result     = false;\n\n  if (wd2Index < 0) {\n    result = (todaysDay == wd1Index);\n  } else {\n    if (wd1Index <= wd2Index) {\n      result = valueInRange(wd1Index, todaysDay, wd2Index);\n    } else {\n      result = valueInRange(wd1Index, todaysDay, 6) || valueInRange(0, todaysDay, wd2Index);\n    }\n  }\n  return result;\n}\n\nfunction getTodaysDay (gmt) {\n  return (gmt ? (new Date()).getUTCDay() : (new Date()).getDay());\n}\n\n// start <= value <= finish\nfunction valueInRange (start, value, finish) {\n  return (start <= value) && (value <= finish);\n}\n"],"mappings":"AACA;AACA;AACA;;AAEAA,MAAM,CAACC,OAAO,GAAGC,YAAY;;AAE7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,QAAQ,GAAG;EAAE,KAAK,EAAE,CAAC;EAAE,KAAK,EAAE,CAAC;EAAE,KAAK,EAAE,CAAC;EAAE,KAAK,EAAE,CAAC;EAAE,KAAK,EAAE,CAAC;EAAE,KAAK,EAAE,CAAC;EAAE,KAAK,EAAE;AAAE,CAAC;AAEzF,SAASD,YAAYA,CAAEE,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAE;EAEpC,IAAIC,UAAU,GAAIF,GAAG,IAAI,KAAK,IAAIC,GAAG,IAAI,KAAM;IAC3CE,SAAS,GAAIC,YAAY,CAACF,UAAU,CAAC;IACrCG,QAAQ,GAAKP,QAAQ,CAACC,GAAG,CAAC,IAAI,CAAC,CAAC;IAChCO,QAAQ,GAAKR,QAAQ,CAACE,GAAG,CAAC,IAAI,CAAC,CAAC;IAChCO,MAAM,GAAO,KAAK;EAEtB,IAAID,QAAQ,GAAG,CAAC,EAAE;IAChBC,MAAM,GAAIJ,SAAS,IAAIE,QAAS;EAClC,CAAC,MAAM;IACL,IAAIA,QAAQ,IAAIC,QAAQ,EAAE;MACxBC,MAAM,GAAGC,YAAY,CAACH,QAAQ,EAAEF,SAAS,EAAEG,QAAQ,CAAC;IACtD,CAAC,MAAM;MACLC,MAAM,GAAGC,YAAY,CAACH,QAAQ,EAAEF,SAAS,EAAE,CAAC,CAAC,IAAIK,YAAY,CAAC,CAAC,EAAEL,SAAS,EAAEG,QAAQ,CAAC;IACvF;EACF;EACA,OAAOC,MAAM;AACf;AAEA,SAASH,YAAYA,CAAEH,GAAG,EAAE;EAC1B,OAAQA,GAAG,GAAI,IAAIQ,IAAI,CAAC,CAAC,CAAEC,SAAS,CAAC,CAAC,GAAI,IAAID,IAAI,CAAC,CAAC,CAAEE,MAAM,CAAC,CAAC;AAChE;;AAEA;AACA,SAASH,YAAYA,CAAEI,KAAK,EAAEC,KAAK,EAAEC,MAAM,EAAE;EAC3C,OAAQF,KAAK,IAAIC,KAAK,IAAMA,KAAK,IAAIC,MAAO;AAC9C","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}