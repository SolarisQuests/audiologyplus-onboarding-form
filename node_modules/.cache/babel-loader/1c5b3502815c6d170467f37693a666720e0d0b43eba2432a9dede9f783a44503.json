{"ast":null,"code":"const tsscmp = require('tsscmp');\nconst crypto = require('crypto');\nconst Attachment = require('./attachment');\nconst Request = require('./request');\nconst builder = require('./build');\nconst resources = require('./schema').definitions;\nconst mailgunExpirey = 15 * 60 * 1000;\nconst mailgunHashType = 'sha256';\nconst mailgunSignatureEncoding = 'hex';\nclass Mailgun {\n  constructor(options) {\n    if (!options.apiKey) {\n      throw new Error('apiKey value must be defined!');\n    }\n    this.username = 'api';\n    this.apiKey = options.apiKey;\n    this.publicApiKey = options.publicApiKey;\n    this.domain = options.domain;\n    this.auth = [this.username, this.apiKey].join(':');\n    this.mute = options.mute || false;\n    this.timeout = options.timeout;\n    this.host = options.host || 'api.mailgun.net';\n    this.endpoint = options.endpoint || '/v3';\n    this.protocol = options.protocol || 'https:';\n    this.port = options.port || 443;\n    this.retry = options.retry || 1;\n    this.testMode = options.testMode;\n    this.testModeLogger = options.testModeLogger;\n    if (options.proxy) {\n      this.proxy = options.proxy;\n    }\n    this.options = {\n      host: this.host,\n      endpoint: this.endpoint,\n      protocol: this.protocol,\n      port: this.port,\n      auth: this.auth,\n      proxy: this.proxy,\n      timeout: this.timeout,\n      retry: this.retry,\n      testMode: this.testMode,\n      testModeLogger: this.testModeLogger\n    };\n    this.mailgunTokens = {};\n  }\n  getDomain(method, resource) {\n    let d = this.domain;\n\n    // filter out API calls that do not require a domain specified\n    if (resource.indexOf('/routes') >= 0 || resource.indexOf('/lists') >= 0 || resource.indexOf('/address') >= 0 || resource.indexOf('/domains') >= 0) {\n      d = '';\n    } else if (resource.indexOf('/messages') >= 0 && (method === 'GET' || method === 'DELETE')) {\n      d = `domains/${this.domain}`;\n    }\n    return d;\n  }\n  getRequestOptions(resource) {\n    let o = this.options;\n\n    // use public API key if we have it for the routes that require it\n    if ((resource.indexOf('/address/validate') >= 0 || resource.indexOf('/address/parse') >= 0) && this.publicApiKey) {\n      const copy = Object.assign({}, this.options);\n      copy.auth = [this.username, this.publicApiKey].join(':');\n      o = copy;\n    }\n    return o;\n  }\n  request(method, resource, data, fn) {\n    let fullpath = resource;\n    const domain = this.getDomain(method, resource);\n    if (domain) {\n      fullpath = '/'.concat(domain, resource);\n    }\n    const req = new Request(this.options);\n    return req.request(method, fullpath, data, fn);\n  }\n  post(path, data, fn) {\n    const req = new Request(this.options);\n    return req.request('POST', path, data, fn);\n  }\n  get(path, data, fn) {\n    const req = new Request(this.options);\n    return req.request('GET', path, data, fn);\n  }\n  delete(path, data, fn) {\n    const req = new Request(this.options);\n    return req.request('DELETE', path, data, fn);\n  }\n  put(path, data, fn) {\n    const req = new Request(this.options);\n    return req.request('PUT', path, data, fn);\n  }\n  validateWebhook(timestamp, token, signature) {\n    const adjustedTimestamp = parseInt(timestamp, 10) * 1000;\n    const fresh = Math.abs(Date.now() - adjustedTimestamp) < mailgunExpirey;\n    if (!fresh) {\n      if (!this.mute) {\n        console.error('[mailgun] Stale Timestamp: this may be an attack');\n        console.error('[mailgun] However, this is most likely your fault\\n');\n        console.error('[mailgun] run `ntpdate ntp.ubuntu.com` and check your system clock\\n');\n        console.error(`[mailgun] System Time: ${new Date().toString()}`);\n        console.error(`[mailgun] Mailgun Time: ${new Date(adjustedTimestamp).toString()}`, timestamp);\n        console.error(`[mailgun] Delta: ${Date.now() - adjustedTimestamp}`);\n      }\n      return false;\n    }\n    if (this.mailgunTokens[token]) {\n      if (!this.mute) {\n        console.error('[mailgun] Replay Attack');\n      }\n      return false;\n    }\n    this.mailgunTokens[token] = true;\n    const tokenTimeout = setTimeout(() => {\n      delete this.mailgunTokens[token];\n    }, mailgunExpirey + 5 * 1000);\n    tokenTimeout.unref();\n    return tsscmp(signature, crypto.createHmac(mailgunHashType, this.apiKey).update(Buffer.from(timestamp + token, 'utf-8')).digest(mailgunSignatureEncoding));\n  }\n  validate(address, isPrivate, opts, fn) {\n    if (typeof opts === 'function') {\n      fn = opts;\n      opts = {};\n    }\n    if (typeof isPrivate === 'object') {\n      opts = isPrivate;\n      isPrivate = false;\n    }\n    if (typeof isPrivate === 'function') {\n      fn = isPrivate;\n      isPrivate = false;\n      opts = {};\n    }\n    let resource = '/address/validate';\n    if (isPrivate) {\n      resource = '/address/private/validate';\n    }\n    const options = this.getRequestOptions(resource);\n    const req = new Request(options);\n    const data = Object.assign({}, {\n      address\n    }, opts);\n    return req.request('GET', resource, data, fn);\n  }\n  parse(addresses, isPrivate, opts, fn) {\n    if (typeof opts === 'function') {\n      fn = opts;\n      opts = {};\n    }\n    if (typeof isPrivate === 'object') {\n      opts = isPrivate;\n      isPrivate = false;\n    }\n    if (typeof isPrivate === 'function') {\n      fn = isPrivate;\n      isPrivate = false;\n      opts = {};\n    }\n    let resource = '/address/parse';\n    if (isPrivate) {\n      resource = '/address/private/parse';\n    }\n    const options = this.getRequestOptions(resource);\n    const req = new Request(options);\n    const data = Object.assign({}, {\n      addresses\n    }, opts);\n    return req.request('GET', resource, data, fn);\n  }\n}\nbuilder.build(Mailgun, resources);\nMailgun.prototype.Attachment = Attachment;\nMailgun.prototype.Mailgun = Mailgun;\nfunction create(options) {\n  return new Mailgun(options);\n}\nmodule.exports = create;","map":{"version":3,"names":["tsscmp","require","crypto","Attachment","Request","builder","resources","definitions","mailgunExpirey","mailgunHashType","mailgunSignatureEncoding","Mailgun","constructor","options","apiKey","Error","username","publicApiKey","domain","auth","join","mute","timeout","host","endpoint","protocol","port","retry","testMode","testModeLogger","proxy","mailgunTokens","getDomain","method","resource","d","indexOf","getRequestOptions","o","copy","Object","assign","request","data","fn","fullpath","concat","req","post","path","get","delete","put","validateWebhook","timestamp","token","signature","adjustedTimestamp","parseInt","fresh","Math","abs","Date","now","console","error","toString","tokenTimeout","setTimeout","unref","createHmac","update","Buffer","from","digest","validate","address","isPrivate","opts","parse","addresses","build","prototype","create","module","exports"],"sources":["/Users/sathyamurthyt/Documents/Ai-forms/form-wizard/node_modules/mailgun-js/lib/mailgun.js"],"sourcesContent":["const tsscmp = require('tsscmp')\nconst crypto = require('crypto')\n\nconst Attachment = require('./attachment')\nconst Request = require('./request')\nconst builder = require('./build')\nconst resources = require('./schema').definitions\n\nconst mailgunExpirey = 15 * 60 * 1000\nconst mailgunHashType = 'sha256'\nconst mailgunSignatureEncoding = 'hex'\n\nclass Mailgun {\n  constructor (options) {\n    if (!options.apiKey) {\n      throw new Error('apiKey value must be defined!')\n    }\n    this.username = 'api'\n    this.apiKey = options.apiKey\n    this.publicApiKey = options.publicApiKey\n    this.domain = options.domain\n    this.auth = [this.username, this.apiKey].join(':')\n    this.mute = options.mute || false\n    this.timeout = options.timeout\n\n    this.host = options.host || 'api.mailgun.net'\n    this.endpoint = options.endpoint || '/v3'\n    this.protocol = options.protocol || 'https:'\n    this.port = options.port || 443\n    this.retry = options.retry || 1\n\n    this.testMode = options.testMode\n    this.testModeLogger = options.testModeLogger\n\n    if (options.proxy) {\n      this.proxy = options.proxy\n    }\n\n    this.options = {\n      host: this.host,\n      endpoint: this.endpoint,\n      protocol: this.protocol,\n      port: this.port,\n      auth: this.auth,\n      proxy: this.proxy,\n      timeout: this.timeout,\n      retry: this.retry,\n      testMode: this.testMode,\n      testModeLogger: this.testModeLogger\n    }\n\n    this.mailgunTokens = {}\n  }\n\n  getDomain (method, resource) {\n    let d = this.domain\n\n    // filter out API calls that do not require a domain specified\n    if ((resource.indexOf('/routes') >= 0) ||\n      (resource.indexOf('/lists') >= 0) ||\n      (resource.indexOf('/address') >= 0) ||\n      (resource.indexOf('/domains') >= 0)) {\n      d = ''\n    } else if ((resource.indexOf('/messages') >= 0) &&\n      (method === 'GET' || method === 'DELETE')) {\n      d = `domains/${this.domain}`\n    }\n\n    return d\n  }\n\n  getRequestOptions (resource) {\n    let o = this.options\n\n    // use public API key if we have it for the routes that require it\n    if ((resource.indexOf('/address/validate') >= 0 ||\n        (resource.indexOf('/address/parse') >= 0)) &&\n      this.publicApiKey) {\n      const copy = Object.assign({}, this.options)\n\n      copy.auth = [this.username, this.publicApiKey].join(':')\n      o = copy\n    }\n\n    return o\n  }\n\n  request (method, resource, data, fn) {\n    let fullpath = resource\n    const domain = this.getDomain(method, resource)\n\n    if (domain) {\n      fullpath = '/'.concat(domain, resource)\n    }\n\n    const req = new Request(this.options)\n\n    return req.request(method, fullpath, data, fn)\n  }\n\n  post (path, data, fn) {\n    const req = new Request(this.options)\n\n    return req.request('POST', path, data, fn)\n  }\n\n  get (path, data, fn) {\n    const req = new Request(this.options)\n\n    return req.request('GET', path, data, fn)\n  }\n\n  delete (path, data, fn) {\n    const req = new Request(this.options)\n\n    return req.request('DELETE', path, data, fn)\n  }\n\n  put (path, data, fn) {\n    const req = new Request(this.options)\n\n    return req.request('PUT', path, data, fn)\n  }\n\n  validateWebhook (timestamp, token, signature) {\n    const adjustedTimestamp = parseInt(timestamp, 10) * 1000\n    const fresh = (Math.abs(Date.now() - adjustedTimestamp) < mailgunExpirey)\n\n    if (!fresh) {\n      if (!this.mute) {\n        console.error('[mailgun] Stale Timestamp: this may be an attack')\n        console.error('[mailgun] However, this is most likely your fault\\n')\n        console.error('[mailgun] run `ntpdate ntp.ubuntu.com` and check your system clock\\n')\n        console.error(`[mailgun] System Time: ${new Date().toString()}`)\n        console.error(`[mailgun] Mailgun Time: ${new Date(adjustedTimestamp).toString()}`, timestamp)\n        console.error(`[mailgun] Delta: ${Date.now() - adjustedTimestamp}`)\n      }\n\n      return false\n    }\n\n    if (this.mailgunTokens[token]) {\n      if (!this.mute) {\n        console.error('[mailgun] Replay Attack')\n      }\n\n      return false\n    }\n\n    this.mailgunTokens[token] = true\n\n    const tokenTimeout = setTimeout(() => {\n      delete this.mailgunTokens[token]\n    }, mailgunExpirey + (5 * 1000))\n\n    tokenTimeout.unref()\n\n    return tsscmp(\n      signature, crypto.createHmac(mailgunHashType, this.apiKey)\n        .update(Buffer.from(timestamp + token, 'utf-8'))\n        .digest(mailgunSignatureEncoding)\n    )\n  }\n\n  validate (address, isPrivate, opts, fn) {\n    if (typeof opts === 'function') {\n      fn = opts\n      opts = {}\n    }\n\n    if (typeof isPrivate === 'object') {\n      opts = isPrivate\n      isPrivate = false\n    }\n\n    if (typeof isPrivate === 'function') {\n      fn = isPrivate\n      isPrivate = false\n      opts = {}\n    }\n\n    let resource = '/address/validate'\n\n    if (isPrivate) {\n      resource = '/address/private/validate'\n    }\n\n    const options = this.getRequestOptions(resource)\n\n    const req = new Request(options)\n    const data = Object.assign({}, {\n      address\n    }, opts)\n\n    return req.request('GET', resource, data, fn)\n  }\n\n  parse (addresses, isPrivate, opts, fn) {\n    if (typeof opts === 'function') {\n      fn = opts\n      opts = {}\n    }\n\n    if (typeof isPrivate === 'object') {\n      opts = isPrivate\n      isPrivate = false\n    }\n\n    if (typeof isPrivate === 'function') {\n      fn = isPrivate\n      isPrivate = false\n      opts = {}\n    }\n\n    let resource = '/address/parse'\n\n    if (isPrivate) {\n      resource = '/address/private/parse'\n    }\n\n    const options = this.getRequestOptions(resource)\n\n    const req = new Request(options)\n    const data = Object.assign({}, {\n      addresses\n    }, opts)\n\n    return req.request('GET', resource, data, fn)\n  }\n}\n\nbuilder.build(Mailgun, resources)\n\nMailgun.prototype.Attachment = Attachment\n\nMailgun.prototype.Mailgun = Mailgun\n\nfunction create (options) {\n  return new Mailgun(options)\n}\n\nmodule.exports = create\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}