{"ast":null,"code":"'use strict';\n\n/**\n * Module dependencies.\n */\nvar url = require('url');\nvar LRU = require('lru-cache');\nvar Agent = require('agent-base');\nvar inherits = require('util').inherits;\nvar debug = require('debug')('proxy-agent');\nvar getProxyForUrl = require('proxy-from-env').getProxyForUrl;\nvar http = require('http');\nvar https = require('https');\nvar PacProxyAgent = require('pac-proxy-agent');\nvar HttpProxyAgent = require('http-proxy-agent');\nvar HttpsProxyAgent = require('https-proxy-agent');\nvar SocksProxyAgent = require('socks-proxy-agent');\n\n/**\n * Module exports.\n */\n\nexports = module.exports = ProxyAgent;\n\n/**\n * Number of `http.Agent` instances to cache.\n *\n * This value was arbitrarily chosen... a better\n * value could be conceived with some benchmarks.\n */\n\nvar cacheSize = 20;\n\n/**\n * Cache for `http.Agent` instances.\n */\n\nexports.cache = new LRU(cacheSize);\n\n/**\n * Built-in proxy types.\n */\n\nexports.proxies = Object.create(null);\nexports.proxies.http = httpOrHttpsProxy;\nexports.proxies.https = httpOrHttpsProxy;\nexports.proxies.socks = SocksProxyAgent;\nexports.proxies.socks4 = SocksProxyAgent;\nexports.proxies.socks4a = SocksProxyAgent;\nexports.proxies.socks5 = SocksProxyAgent;\nexports.proxies.socks5h = SocksProxyAgent;\nPacProxyAgent.protocols.forEach(function (protocol) {\n  exports.proxies['pac+' + protocol] = PacProxyAgent;\n});\nfunction httpOrHttps(opts, secureEndpoint) {\n  if (secureEndpoint) {\n    // HTTPS\n    return https.globalAgent;\n  } else {\n    // HTTP\n    return http.globalAgent;\n  }\n}\nfunction httpOrHttpsProxy(opts, secureEndpoint) {\n  if (secureEndpoint) {\n    // HTTPS\n    return new HttpsProxyAgent(opts);\n  } else {\n    // HTTP\n    return new HttpProxyAgent(opts);\n  }\n}\nfunction mapOptsToProxy(opts) {\n  // NO_PROXY case\n  if (!opts) {\n    return {\n      uri: 'no proxy',\n      fn: httpOrHttps\n    };\n  }\n  if ('string' == typeof opts) opts = url.parse(opts);\n  var proxies;\n  if (opts.proxies) {\n    proxies = Object.assign({}, exports.proxies, opts.proxies);\n  } else {\n    proxies = exports.proxies;\n  }\n\n  // get the requested proxy \"protocol\"\n  var protocol = opts.protocol;\n  if (!protocol) {\n    throw new TypeError('You must specify a \"protocol\" for the ' + 'proxy type (' + Object.keys(proxies).join(', ') + ')');\n  }\n\n  // strip the trailing \":\" if present\n  if (':' == protocol[protocol.length - 1]) {\n    protocol = protocol.substring(0, protocol.length - 1);\n  }\n\n  // get the proxy `http.Agent` creation function\n  var proxyFn = proxies[protocol];\n  if ('function' != typeof proxyFn) {\n    throw new TypeError('unsupported proxy protocol: \"' + protocol + '\"');\n  }\n\n  // format the proxy info back into a URI, since an opts object\n  // could have been passed in originally. This generated URI is used\n  // as part of the \"key\" for the LRU cache\n  return {\n    opts: opts,\n    uri: url.format({\n      protocol: protocol + ':',\n      slashes: true,\n      auth: opts.auth,\n      hostname: opts.hostname || opts.host,\n      port: opts.port\n    }),\n    fn: proxyFn\n  };\n}\n\n/**\n * Attempts to get an `http.Agent` instance based off of the given proxy URI\n * information, and the `secure` flag.\n *\n * An LRU cache is used, to prevent unnecessary creation of proxy\n * `http.Agent` instances.\n *\n * @param {String} uri proxy url\n * @param {Boolean} secure true if this is for an HTTPS request, false for HTTP\n * @return {http.Agent}\n * @api public\n */\n\nfunction ProxyAgent(opts) {\n  if (!(this instanceof ProxyAgent)) return new ProxyAgent(opts);\n  debug('creating new ProxyAgent instance: %o', opts);\n  Agent.call(this, connect);\n  if (opts) {\n    var proxy = mapOptsToProxy(opts);\n    this.proxy = proxy.opts;\n    this.proxyUri = proxy.uri;\n    this.proxyFn = proxy.fn;\n  }\n}\ninherits(ProxyAgent, Agent);\n\n/**\n *\n */\n\nfunction connect(req, opts, fn) {\n  var proxyOpts = this.proxy;\n  var proxyUri = this.proxyUri;\n  var proxyFn = this.proxyFn;\n\n  // if we did not instantiate with a proxy, set one per request\n  if (!proxyOpts) {\n    var urlOpts = getProxyForUrl(opts);\n    var proxy = mapOptsToProxy(urlOpts, opts);\n    proxyOpts = proxy.opts;\n    proxyUri = proxy.uri;\n    proxyFn = proxy.fn;\n  }\n\n  // create the \"key\" for the LRU cache\n  var key = proxyUri;\n  if (opts.secureEndpoint) key += ' secure';\n\n  // attempt to get a cached `http.Agent` instance first\n  var agent = exports.cache.get(key);\n  if (!agent) {\n    // get an `http.Agent` instance from protocol-specific agent function\n    agent = proxyFn(proxyOpts, opts.secureEndpoint);\n    if (agent) {\n      exports.cache.set(key, agent);\n    }\n  } else {\n    debug('cache hit with key: %o', key);\n  }\n  if (!proxyOpts) {\n    agent.addRequest(req, opts);\n  } else {\n    // XXX: agent.callback() is an agent-base-ism\n    agent.callback(req, opts, fn);\n  }\n}","map":{"version":3,"names":["url","require","LRU","Agent","inherits","debug","getProxyForUrl","http","https","PacProxyAgent","HttpProxyAgent","HttpsProxyAgent","SocksProxyAgent","exports","module","ProxyAgent","cacheSize","cache","proxies","Object","create","httpOrHttpsProxy","socks","socks4","socks4a","socks5","socks5h","protocols","forEach","protocol","httpOrHttps","opts","secureEndpoint","globalAgent","mapOptsToProxy","uri","fn","parse","assign","TypeError","keys","join","length","substring","proxyFn","format","slashes","auth","hostname","host","port","call","connect","proxy","proxyUri","req","proxyOpts","urlOpts","key","agent","get","set","addRequest","callback"],"sources":["/Users/sathyamurthyt/Documents/Ai-forms/form-wizard/node_modules/proxy-agent/index.js"],"sourcesContent":["'use strict';\n\n/**\n * Module dependencies.\n */\n\nvar url = require('url');\nvar LRU = require('lru-cache');\nvar Agent = require('agent-base');\nvar inherits = require('util').inherits;\nvar debug = require('debug')('proxy-agent');\nvar getProxyForUrl = require('proxy-from-env').getProxyForUrl;\n\nvar http = require('http');\nvar https = require('https');\nvar PacProxyAgent = require('pac-proxy-agent');\nvar HttpProxyAgent = require('http-proxy-agent');\nvar HttpsProxyAgent = require('https-proxy-agent');\nvar SocksProxyAgent = require('socks-proxy-agent');\n\n/**\n * Module exports.\n */\n\nexports = module.exports = ProxyAgent;\n\n/**\n * Number of `http.Agent` instances to cache.\n *\n * This value was arbitrarily chosen... a better\n * value could be conceived with some benchmarks.\n */\n\nvar cacheSize = 20;\n\n/**\n * Cache for `http.Agent` instances.\n */\n\nexports.cache = new LRU(cacheSize);\n\n/**\n * Built-in proxy types.\n */\n\nexports.proxies = Object.create(null);\nexports.proxies.http = httpOrHttpsProxy;\nexports.proxies.https = httpOrHttpsProxy;\nexports.proxies.socks = SocksProxyAgent;\nexports.proxies.socks4 = SocksProxyAgent;\nexports.proxies.socks4a = SocksProxyAgent;\nexports.proxies.socks5 = SocksProxyAgent;\nexports.proxies.socks5h = SocksProxyAgent;\n\nPacProxyAgent.protocols.forEach(function (protocol) {\n  exports.proxies['pac+' + protocol] = PacProxyAgent;\n});\n\nfunction httpOrHttps(opts, secureEndpoint) {\n  if (secureEndpoint) {\n    // HTTPS\n    return https.globalAgent;\n  } else {\n    // HTTP\n    return http.globalAgent;\n  }\n}\n\nfunction httpOrHttpsProxy(opts, secureEndpoint) {\n  if (secureEndpoint) {\n    // HTTPS\n    return new HttpsProxyAgent(opts);\n  } else {\n    // HTTP\n    return new HttpProxyAgent(opts);\n  }\n}\n\nfunction mapOptsToProxy(opts) {\n  // NO_PROXY case\n  if (!opts) {\n    return {\n      uri: 'no proxy',\n      fn: httpOrHttps\n    };\n  }\n\n  if ('string' == typeof opts) opts = url.parse(opts);\n\n  var proxies;\n  if (opts.proxies) {\n    proxies = Object.assign({}, exports.proxies, opts.proxies);\n  } else {\n    proxies = exports.proxies;\n  }\n\n  // get the requested proxy \"protocol\"\n  var protocol = opts.protocol;\n  if (!protocol) {\n    throw new TypeError('You must specify a \"protocol\" for the ' +\n                        'proxy type (' + Object.keys(proxies).join(', ') + ')');\n  }\n\n  // strip the trailing \":\" if present\n  if (':' == protocol[protocol.length - 1]) {\n    protocol = protocol.substring(0, protocol.length - 1);\n  }\n\n  // get the proxy `http.Agent` creation function\n  var proxyFn = proxies[protocol];\n  if ('function' != typeof proxyFn) {\n    throw new TypeError('unsupported proxy protocol: \"' + protocol + '\"');\n  }\n\n  // format the proxy info back into a URI, since an opts object\n  // could have been passed in originally. This generated URI is used\n  // as part of the \"key\" for the LRU cache\n  return {\n    opts: opts,\n    uri: url.format({\n      protocol: protocol + ':',\n      slashes: true,\n      auth: opts.auth,\n      hostname: opts.hostname || opts.host,\n      port: opts.port\n    }),\n    fn: proxyFn,\n  }\n}\n\n/**\n * Attempts to get an `http.Agent` instance based off of the given proxy URI\n * information, and the `secure` flag.\n *\n * An LRU cache is used, to prevent unnecessary creation of proxy\n * `http.Agent` instances.\n *\n * @param {String} uri proxy url\n * @param {Boolean} secure true if this is for an HTTPS request, false for HTTP\n * @return {http.Agent}\n * @api public\n */\n\nfunction ProxyAgent (opts) {\n  if (!(this instanceof ProxyAgent)) return new ProxyAgent(opts);\n  debug('creating new ProxyAgent instance: %o', opts);\n  Agent.call(this, connect);\n\n  if (opts) {\n    var proxy = mapOptsToProxy(opts);\n    this.proxy = proxy.opts;\n    this.proxyUri = proxy.uri;\n    this.proxyFn = proxy.fn;\n  }\n}\ninherits(ProxyAgent, Agent);\n\n/**\n *\n */\n\nfunction connect (req, opts, fn) {\n  var proxyOpts = this.proxy;\n  var proxyUri = this.proxyUri;\n  var proxyFn = this.proxyFn;\n\n  // if we did not instantiate with a proxy, set one per request\n  if (!proxyOpts) {\n    var urlOpts = getProxyForUrl(opts);\n    var proxy = mapOptsToProxy(urlOpts, opts);\n    proxyOpts = proxy.opts;\n    proxyUri = proxy.uri;\n    proxyFn = proxy.fn;\n  }\n\n  // create the \"key\" for the LRU cache\n  var key = proxyUri;\n  if (opts.secureEndpoint) key += ' secure';\n\n  // attempt to get a cached `http.Agent` instance first\n  var agent = exports.cache.get(key);\n  if (!agent) {\n    // get an `http.Agent` instance from protocol-specific agent function\n    agent = proxyFn(proxyOpts, opts.secureEndpoint);\n    if (agent) {\n      exports.cache.set(key, agent);\n    }\n  } else {\n    debug('cache hit with key: %o', key);\n  }\n\n  if (!proxyOpts) {\n    agent.addRequest(req, opts);\n  } else {\n    // XXX: agent.callback() is an agent-base-ism\n    agent.callback(req, opts, fn);\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}