{"ast":null,"code":"/**\n * Module exports.\n */\n\nmodule.exports = timeRange;\n\n/**\n * True during (or between) the specified time(s).\n *\n * Even though the examples don't show it, this parameter may be present in\n * each of the different parameter profiles, always as the last parameter.\n *\n *\n * Examples:\n *\n * ``` js\n * timerange(12)\n * true from noon to 1pm.\n *\n * timerange(12, 13)\n * same as above.\n *\n * timerange(12, \"GMT\")\n * true from noon to 1pm, in GMT timezone.\n *\n * timerange(9, 17)\n * true from 9am to 5pm.\n *\n * timerange(8, 30, 17, 00)\n * true from 8:30am to 5:00pm.\n *\n * timerange(0, 0, 0, 0, 0, 30)\n * true between midnight and 30 seconds past midnight.\n * ```\n *\n * timeRange(hour)\n * timeRange(hour1, hour2)\n * timeRange(hour1, min1, hour2, min2)\n * timeRange(hour1, min1, sec1, hour2, min2, sec2)\n * timeRange(hour1, min1, sec1, hour2, min2, sec2, gmt)\n *\n * @param {String} hour is the hour from 0 to 23. (0 is midnight, 23 is 11 pm.)\n * @param {String} min minutes from 0 to 59.\n * @param {String} sec seconds from 0 to 59.\n * @param {String} gmt either the string \"GMT\" for GMT timezone, or not specified, for local timezone.\n * @return {Boolean}\n */\n\nfunction timeRange() {\n  var args = Array.prototype.slice.call(arguments),\n    lastArg = args.pop(),\n    useGMTzone = lastArg == \"GMT\",\n    currentDate = new Date();\n  if (!useGMTzone) {\n    args.push(lastArg);\n  }\n  var noOfArgs = args.length,\n    result = false,\n    numericArgs = args.map(function (n) {\n      return parseInt(n);\n    });\n\n  // timeRange(hour)\n  if (noOfArgs == 1) {\n    result = getCurrentHour(useGMTzone, currentDate) == numericArgs[0];\n\n    // timeRange(hour1, hour2)\n  } else if (noOfArgs == 2) {\n    var currentHour = getCurrentHour(useGMTzone, currentDate);\n    result = numericArgs[0] <= currentHour && currentHour < numericArgs[1];\n\n    // timeRange(hour1, min1, hour2, min2)\n  } else if (noOfArgs == 4) {\n    result = valueInRange(secondsElapsedToday(numericArgs[0], numericArgs[1], 0), secondsElapsedToday(getCurrentHour(useGMTzone, currentDate), getCurrentMinute(useGMTzone, currentDate), 0), secondsElapsedToday(numericArgs[2], numericArgs[3], 59));\n\n    // timeRange(hour1, min1, sec1, hour2, min2, sec2)\n  } else if (noOfArgs == 6) {\n    result = valueInRange(secondsElapsedToday(numericArgs[0], numericArgs[1], numericArgs[2]), secondsElapsedToday(getCurrentHour(useGMTzone, currentDate), getCurrentMinute(useGMTzone, currentDate), getCurrentSecond(useGMTzone, currentDate)), secondsElapsedToday(numericArgs[3], numericArgs[4], numericArgs[5]));\n  }\n  return result;\n}\nfunction secondsElapsedToday(hh, mm, ss) {\n  return hh * 3600 + mm * 60 + ss;\n}\nfunction getCurrentHour(gmt, currentDate) {\n  return gmt ? currentDate.getUTCHours() : currentDate.getHours();\n}\nfunction getCurrentMinute(gmt, currentDate) {\n  return gmt ? currentDate.getUTCMinutes() : currentDate.getMinutes();\n}\nfunction getCurrentSecond(gmt, currentDate) {\n  return gmt ? currentDate.getUTCSeconds() : currentDate.getSeconds();\n}\n\n// start <= value <= finish\nfunction valueInRange(start, value, finish) {\n  return start <= value && value <= finish;\n}","map":{"version":3,"names":["module","exports","timeRange","args","Array","prototype","slice","call","arguments","lastArg","pop","useGMTzone","currentDate","Date","push","noOfArgs","length","result","numericArgs","map","n","parseInt","getCurrentHour","currentHour","valueInRange","secondsElapsedToday","getCurrentMinute","getCurrentSecond","hh","mm","ss","gmt","getUTCHours","getHours","getUTCMinutes","getMinutes","getUTCSeconds","getSeconds","start","value","finish"],"sources":["/Users/sathyamurthyt/Documents/Ai-forms/form-wizard/node_modules/pac-resolver/timeRange.js"],"sourcesContent":["\n/**\n * Module exports.\n */\n\nmodule.exports = timeRange;\n\n/**\n * True during (or between) the specified time(s).\n *\n * Even though the examples don't show it, this parameter may be present in\n * each of the different parameter profiles, always as the last parameter.\n *\n *\n * Examples:\n *\n * ``` js\n * timerange(12)\n * true from noon to 1pm.\n *\n * timerange(12, 13)\n * same as above.\n *\n * timerange(12, \"GMT\")\n * true from noon to 1pm, in GMT timezone.\n *\n * timerange(9, 17)\n * true from 9am to 5pm.\n *\n * timerange(8, 30, 17, 00)\n * true from 8:30am to 5:00pm.\n *\n * timerange(0, 0, 0, 0, 0, 30)\n * true between midnight and 30 seconds past midnight.\n * ```\n *\n * timeRange(hour)\n * timeRange(hour1, hour2)\n * timeRange(hour1, min1, hour2, min2)\n * timeRange(hour1, min1, sec1, hour2, min2, sec2)\n * timeRange(hour1, min1, sec1, hour2, min2, sec2, gmt)\n *\n * @param {String} hour is the hour from 0 to 23. (0 is midnight, 23 is 11 pm.)\n * @param {String} min minutes from 0 to 59.\n * @param {String} sec seconds from 0 to 59.\n * @param {String} gmt either the string \"GMT\" for GMT timezone, or not specified, for local timezone.\n * @return {Boolean}\n */\n\nfunction timeRange () {\n  var args        = Array.prototype.slice.call(arguments),\n      lastArg     = args.pop(),\n      useGMTzone  = (lastArg == \"GMT\"),\n      currentDate = new Date();\n\n  if (!useGMTzone) { args.push(lastArg); }\n\n  var noOfArgs    = args.length,\n      result      = false,\n      numericArgs = args.map(function(n) { return parseInt(n) });\n\n  // timeRange(hour)\n  if (noOfArgs == 1) {\n    result = getCurrentHour(useGMTzone, currentDate) == numericArgs[0];\n\n  // timeRange(hour1, hour2)\n  } else if (noOfArgs == 2) {\n    var currentHour = getCurrentHour(useGMTzone, currentDate);\n    result = (numericArgs[0] <= currentHour) && (currentHour < numericArgs[1]);\n\n  // timeRange(hour1, min1, hour2, min2)\n  } else if (noOfArgs == 4) {\n    result =\n      valueInRange(\n        secondsElapsedToday(numericArgs[0], numericArgs[1], 0),\n        secondsElapsedToday(getCurrentHour(useGMTzone, currentDate), getCurrentMinute(useGMTzone, currentDate), 0),\n        secondsElapsedToday(numericArgs[2], numericArgs[3], 59)\n      );\n\n  // timeRange(hour1, min1, sec1, hour2, min2, sec2)\n  } else if (noOfArgs == 6) {\n    result =\n      valueInRange(\n        secondsElapsedToday(numericArgs[0], numericArgs[1], numericArgs[2]),\n        secondsElapsedToday(\n          getCurrentHour(useGMTzone, currentDate),\n          getCurrentMinute(useGMTzone, currentDate),\n          getCurrentSecond(useGMTzone, currentDate)\n        ),\n        secondsElapsedToday(numericArgs[3], numericArgs[4], numericArgs[5])\n      );\n  }\n\n  return result;\n}\n\nfunction secondsElapsedToday (hh, mm, ss) {\n  return ((hh*3600) + (mm*60) + ss);\n}\n\nfunction getCurrentHour (gmt, currentDate) {\n  return (gmt ? currentDate.getUTCHours() : currentDate.getHours());\n}\n\nfunction getCurrentMinute (gmt, currentDate) {\n  return (gmt ? currentDate.getUTCMinutes() : currentDate.getMinutes());\n}\n\nfunction getCurrentSecond (gmt, currentDate) {\n  return (gmt ? currentDate.getUTCSeconds() : currentDate.getSeconds());\n}\n\n// start <= value <= finish\nfunction valueInRange (start, value, finish) {\n  return (start <= value) && (value <= finish);\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}