{"ast":null,"code":"const wc = require('with-callback');\n\n/**\n * Promisifies the call to <code>fn</code> if appropriate given the arguments.\n * Calls the function <code>fn</code> either using callback style if last argument is a function.\n * If last argument is not a function, <code>fn</code> is called returning a promise.\n * This lets you create API that can be called in either fashions.\n * @param  {Object}   ctx  context / this\n * @param  {Function} fn   The function to call\n * @param  {arguments}   args Arguments\n * @return {undefined|*|Promise}  Promise if promisified\n */\nfunction promisifyCall(ctx, fn) {\n  const args = [];\n  args.push.apply(args, arguments);\n  args.splice(0, 2);\n  // check if last (callback) argument is being pased in explicitly\n  // as it might be undefined or null, in which case we'll replace it\n  const same = fn.length && args.length === fn.length;\n  const lastIndex = same ? fn.length - 1 : args.length - 1;\n  const lastArg = args && args.length > 0 ? args[lastIndex] : null;\n  const cb = typeof lastArg === 'function' ? lastArg : null;\n  if (cb) {\n    return fn.apply(ctx, args);\n  }\n  return wc(callback => {\n    same ? args[lastIndex] = callback : args.push(callback);\n    fn.apply(ctx, args);\n  });\n}\nmodule.exports = promisifyCall;","map":{"version":3,"names":["wc","require","promisifyCall","ctx","fn","args","push","apply","arguments","splice","same","length","lastIndex","lastArg","cb","callback","module","exports"],"sources":["/Users/sathyamurthyt/Documents/Ai-forms/form-wizard/node_modules/promisify-call/index.js"],"sourcesContent":["const wc = require('with-callback')\n\n/**\n * Promisifies the call to <code>fn</code> if appropriate given the arguments.\n * Calls the function <code>fn</code> either using callback style if last argument is a function.\n * If last argument is not a function, <code>fn</code> is called returning a promise.\n * This lets you create API that can be called in either fashions.\n * @param  {Object}   ctx  context / this\n * @param  {Function} fn   The function to call\n * @param  {arguments}   args Arguments\n * @return {undefined|*|Promise}  Promise if promisified\n */\nfunction promisifyCall (ctx, fn) {\n  const args = []\n  args.push.apply(args, arguments)\n  args.splice(0, 2)\n  // check if last (callback) argument is being pased in explicitly\n  // as it might be undefined or null, in which case we'll replace it\n  const same = fn.length && args.length === fn.length\n  const lastIndex = same ? fn.length - 1 : args.length - 1\n  const lastArg = args && args.length > 0 ? args[lastIndex] : null\n  const cb = typeof lastArg === 'function' ? lastArg : null\n\n  if (cb) {\n    return fn.apply(ctx, args)\n  }\n\n  return wc(callback => {\n    same\n      ? args[lastIndex] = callback\n      : args.push(callback)\n    fn.apply(ctx, args)\n  })\n}\n\nmodule.exports = promisifyCall\n"],"mappings":"AAAA,MAAMA,EAAE,GAAGC,OAAO,CAAC,eAAe,CAAC;;AAEnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,aAAaA,CAAEC,GAAG,EAAEC,EAAE,EAAE;EAC/B,MAAMC,IAAI,GAAG,EAAE;EACfA,IAAI,CAACC,IAAI,CAACC,KAAK,CAACF,IAAI,EAAEG,SAAS,CAAC;EAChCH,IAAI,CAACI,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC;EACjB;EACA;EACA,MAAMC,IAAI,GAAGN,EAAE,CAACO,MAAM,IAAIN,IAAI,CAACM,MAAM,KAAKP,EAAE,CAACO,MAAM;EACnD,MAAMC,SAAS,GAAGF,IAAI,GAAGN,EAAE,CAACO,MAAM,GAAG,CAAC,GAAGN,IAAI,CAACM,MAAM,GAAG,CAAC;EACxD,MAAME,OAAO,GAAGR,IAAI,IAAIA,IAAI,CAACM,MAAM,GAAG,CAAC,GAAGN,IAAI,CAACO,SAAS,CAAC,GAAG,IAAI;EAChE,MAAME,EAAE,GAAG,OAAOD,OAAO,KAAK,UAAU,GAAGA,OAAO,GAAG,IAAI;EAEzD,IAAIC,EAAE,EAAE;IACN,OAAOV,EAAE,CAACG,KAAK,CAACJ,GAAG,EAAEE,IAAI,CAAC;EAC5B;EAEA,OAAOL,EAAE,CAACe,QAAQ,IAAI;IACpBL,IAAI,GACAL,IAAI,CAACO,SAAS,CAAC,GAAGG,QAAQ,GAC1BV,IAAI,CAACC,IAAI,CAACS,QAAQ,CAAC;IACvBX,EAAE,CAACG,KAAK,CAACJ,GAAG,EAAEE,IAAI,CAAC;EACrB,CAAC,CAAC;AACJ;AAEAW,MAAM,CAACC,OAAO,GAAGf,aAAa","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}