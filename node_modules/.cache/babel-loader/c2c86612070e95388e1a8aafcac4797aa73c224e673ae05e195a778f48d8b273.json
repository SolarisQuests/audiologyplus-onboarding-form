{"ast":null,"code":"var fs = require('fs'),\n  tls = require('tls'),\n  zlib = require('zlib'),\n  Socket = require('net').Socket,\n  EventEmitter = require('events').EventEmitter,\n  inherits = require('util').inherits,\n  inspect = require('util').inspect;\nvar Parser = require('./parser');\nvar XRegExp = require('xregexp').XRegExp;\nvar REX_TIMEVAL = XRegExp.cache('^(?<year>\\\\d{4})(?<month>\\\\d{2})(?<date>\\\\d{2})(?<hour>\\\\d{2})(?<minute>\\\\d{2})(?<second>\\\\d+)(?:.\\\\d+)?$'),\n  RE_PASV = /([\\d]+),([\\d]+),([\\d]+),([\\d]+),([-\\d]+),([-\\d]+)/,\n  RE_EOL = /\\r?\\n/g,\n  RE_WD = /\"(.+)\"(?: |$)/,\n  RE_SYST = /^([^ ]+)(?: |$)/;\nvar\n  /*TYPE = {\n    SYNTAX: 0,\n    INFO: 1,\n    SOCKETS: 2,\n    AUTH: 3,\n    UNSPEC: 4,\n    FILESYS: 5\n  },*/\n  RETVAL = {\n    PRELIM: 1,\n    OK: 2,\n    WAITING: 3,\n    ERR_TEMP: 4,\n    ERR_PERM: 5\n  },\n  /*ERRORS = {\n    421: 'Service not available, closing control connection',\n    425: 'Can\\'t open data connection',\n    426: 'Connection closed; transfer aborted',\n    450: 'Requested file action not taken / File unavailable (e.g., file busy)',\n    451: 'Requested action aborted: local error in processing',\n    452: 'Requested action not taken / Insufficient storage space in system',\n    500: 'Syntax error / Command unrecognized',\n    501: 'Syntax error in parameters or arguments',\n    502: 'Command not implemented',\n    503: 'Bad sequence of commands',\n    504: 'Command not implemented for that parameter',\n    530: 'Not logged in',\n    532: 'Need account for storing files',\n    550: 'Requested action not taken / File unavailable (e.g., file not found, no access)',\n    551: 'Requested action aborted: page type unknown',\n    552: 'Requested file action aborted / Exceeded storage allocation (for current directory or dataset)',\n    553: 'Requested action not taken / File name not allowed'\n  },*/\n  bytesNOOP = new Buffer('NOOP\\r\\n');\nvar FTP = module.exports = function () {\n  if (!(this instanceof FTP)) return new FTP();\n  this._socket = undefined;\n  this._pasvSock = undefined;\n  this._feat = undefined;\n  this._curReq = undefined;\n  this._queue = [];\n  this._secstate = undefined;\n  this._debug = undefined;\n  this._keepalive = undefined;\n  this._ending = false;\n  this._parser = undefined;\n  this.options = {\n    host: undefined,\n    port: undefined,\n    user: undefined,\n    password: undefined,\n    secure: false,\n    secureOptions: undefined,\n    connTimeout: undefined,\n    pasvTimeout: undefined,\n    aliveTimeout: undefined\n  };\n  this.connected = false;\n};\ninherits(FTP, EventEmitter);\nFTP.prototype.connect = function (options) {\n  var self = this;\n  if (typeof options !== 'object') options = {};\n  this.connected = false;\n  this.options.host = options.host || 'localhost';\n  this.options.port = options.port || 21;\n  this.options.user = options.user || 'anonymous';\n  this.options.password = options.password || 'anonymous@';\n  this.options.secure = options.secure || false;\n  this.options.secureOptions = options.secureOptions;\n  this.options.connTimeout = options.connTimeout || 10000;\n  this.options.pasvTimeout = options.pasvTimeout || 10000;\n  this.options.aliveTimeout = options.keepalive || 10000;\n  if (typeof options.debug === 'function') this._debug = options.debug;\n  var secureOptions,\n    debug = this._debug,\n    socket = new Socket();\n  socket.setTimeout(0);\n  socket.setKeepAlive(true);\n  this._parser = new Parser({\n    debug: debug\n  });\n  this._parser.on('response', function (code, text) {\n    var retval = code / 100 >> 0;\n    if (retval === RETVAL.ERR_TEMP || retval === RETVAL.ERR_PERM) {\n      if (self._curReq) self._curReq.cb(makeError(code, text), undefined, code);else self.emit('error', makeError(code, text));\n    } else if (self._curReq) self._curReq.cb(undefined, text, code);\n\n    // a hack to signal we're waiting for a PASV data connection to complete\n    // first before executing any more queued requests ...\n    //\n    // also: don't forget our current request if we're expecting another\n    // terminating response ....\n    if (self._curReq && retval !== RETVAL.PRELIM) {\n      self._curReq = undefined;\n      self._send();\n    }\n    noopreq.cb();\n  });\n  if (this.options.secure) {\n    secureOptions = {};\n    secureOptions.host = this.options.host;\n    for (var k in this.options.secureOptions) secureOptions[k] = this.options.secureOptions[k];\n    secureOptions.socket = socket;\n    this.options.secureOptions = secureOptions;\n  }\n  if (this.options.secure === 'implicit') this._socket = tls.connect(secureOptions, onconnect);else {\n    socket.once('connect', onconnect);\n    this._socket = socket;\n  }\n  var noopreq = {\n    cmd: 'NOOP',\n    cb: function () {\n      clearTimeout(self._keepalive);\n      self._keepalive = setTimeout(donoop, self.options.aliveTimeout);\n    }\n  };\n  function donoop() {\n    if (!self._socket || !self._socket.writable) clearTimeout(self._keepalive);else if (!self._curReq && self._queue.length === 0) {\n      self._curReq = noopreq;\n      debug && debug('[connection] > NOOP');\n      self._socket.write(bytesNOOP);\n    } else noopreq.cb();\n  }\n  function onconnect() {\n    clearTimeout(timer);\n    clearTimeout(self._keepalive);\n    self.connected = true;\n    self._socket = socket; // re-assign for implicit secure connections\n\n    var cmd;\n    if (self._secstate) {\n      if (self._secstate === 'upgraded-tls' && self.options.secure === true) {\n        cmd = 'PBSZ';\n        self._send('PBSZ 0', reentry, true);\n      } else {\n        cmd = 'USER';\n        self._send('USER ' + self.options.user, reentry, true);\n      }\n    } else {\n      self._curReq = {\n        cmd: '',\n        cb: reentry\n      };\n    }\n    function reentry(err, text, code) {\n      if (err && (!cmd || cmd === 'USER' || cmd === 'PASS' || cmd === 'TYPE')) {\n        self.emit('error', err);\n        return self._socket && self._socket.end();\n      }\n      if (cmd === 'AUTH TLS' && code !== 234 && self.options.secure !== true || cmd === 'AUTH SSL' && code !== 334 || cmd === 'PBSZ' && code !== 200 || cmd === 'PROT' && code !== 200) {\n        self.emit('error', makeError(code, 'Unable to secure connection(s)'));\n        return self._socket && self._socket.end();\n      }\n      if (!cmd) {\n        // sometimes the initial greeting can contain useful information\n        // about authorized use, other limits, etc.\n        self.emit('greeting', text);\n        if (self.options.secure && self.options.secure !== 'implicit') {\n          cmd = 'AUTH TLS';\n          self._send(cmd, reentry, true);\n        } else {\n          cmd = 'USER';\n          self._send('USER ' + self.options.user, reentry, true);\n        }\n      } else if (cmd === 'USER') {\n        if (code !== 230) {\n          // password required\n          if (!self.options.password) {\n            self.emit('error', makeError(code, 'Password required'));\n            return self._socket && self._socket.end();\n          }\n          cmd = 'PASS';\n          self._send('PASS ' + self.options.password, reentry, true);\n        } else {\n          // no password required\n          cmd = 'PASS';\n          reentry(undefined, text, code);\n        }\n      } else if (cmd === 'PASS') {\n        cmd = 'FEAT';\n        self._send(cmd, reentry, true);\n      } else if (cmd === 'FEAT') {\n        if (!err) self._feat = Parser.parseFeat(text);\n        cmd = 'TYPE';\n        self._send('TYPE I', reentry, true);\n      } else if (cmd === 'TYPE') self.emit('ready');else if (cmd === 'PBSZ') {\n        cmd = 'PROT';\n        self._send('PROT P', reentry, true);\n      } else if (cmd === 'PROT') {\n        cmd = 'USER';\n        self._send('USER ' + self.options.user, reentry, true);\n      } else if (cmd.substr(0, 4) === 'AUTH') {\n        if (cmd === 'AUTH TLS' && code !== 234) {\n          cmd = 'AUTH SSL';\n          return self._send(cmd, reentry, true);\n        } else if (cmd === 'AUTH TLS') self._secstate = 'upgraded-tls';else if (cmd === 'AUTH SSL') self._secstate = 'upgraded-ssl';\n        socket.removeAllListeners('data');\n        socket.removeAllListeners('error');\n        socket._decoder = null;\n        self._curReq = null; // prevent queue from being processed during\n        // TLS/SSL negotiation\n        secureOptions.socket = self._socket;\n        secureOptions.session = undefined;\n        socket = tls.connect(secureOptions, onconnect);\n        socket.setEncoding('binary');\n        socket.on('data', ondata);\n        socket.once('end', onend);\n        socket.on('error', onerror);\n      }\n    }\n  }\n  socket.on('data', ondata);\n  function ondata(chunk) {\n    debug && debug('[connection] < ' + inspect(chunk.toString('binary')));\n    if (self._parser) self._parser.write(chunk);\n  }\n  socket.on('error', onerror);\n  function onerror(err) {\n    clearTimeout(timer);\n    clearTimeout(self._keepalive);\n    self.emit('error', err);\n  }\n  socket.once('end', onend);\n  function onend() {\n    ondone();\n    self.emit('end');\n  }\n  socket.once('close', function (had_err) {\n    ondone();\n    self.emit('close', had_err);\n  });\n  var hasReset = false;\n  function ondone() {\n    if (!hasReset) {\n      hasReset = true;\n      clearTimeout(timer);\n      self._reset();\n    }\n  }\n  var timer = setTimeout(function () {\n    self.emit('error', new Error('Timeout while connecting to server'));\n    self._socket && self._socket.destroy();\n    self._reset();\n  }, this.options.connTimeout);\n  this._socket.connect(this.options.port, this.options.host);\n};\nFTP.prototype.end = function () {\n  if (this._queue.length) this._ending = true;else this._reset();\n};\nFTP.prototype.destroy = function () {\n  this._reset();\n};\n\n// \"Standard\" (RFC 959) commands\nFTP.prototype.ascii = function (cb) {\n  return this._send('TYPE A', cb);\n};\nFTP.prototype.binary = function (cb) {\n  return this._send('TYPE I', cb);\n};\nFTP.prototype.abort = function (immediate, cb) {\n  if (typeof immediate === 'function') {\n    cb = immediate;\n    immediate = true;\n  }\n  if (immediate) this._send('ABOR', cb, true);else this._send('ABOR', cb);\n};\nFTP.prototype.cwd = function (path, cb, promote) {\n  this._send('CWD ' + path, function (err, text, code) {\n    if (err) return cb(err);\n    var m = RE_WD.exec(text);\n    cb(undefined, m ? m[1] : undefined);\n  }, promote);\n};\nFTP.prototype.delete = function (path, cb) {\n  this._send('DELE ' + path, cb);\n};\nFTP.prototype.site = function (cmd, cb) {\n  this._send('SITE ' + cmd, cb);\n};\nFTP.prototype.status = function (cb) {\n  this._send('STAT', cb);\n};\nFTP.prototype.rename = function (from, to, cb) {\n  var self = this;\n  this._send('RNFR ' + from, function (err) {\n    if (err) return cb(err);\n    self._send('RNTO ' + to, cb, true);\n  });\n};\nFTP.prototype.logout = function (cb) {\n  this._send('QUIT', cb);\n};\nFTP.prototype.listSafe = function (path, zcomp, cb) {\n  if (typeof path === 'string') {\n    var self = this;\n    // store current path\n    this.pwd(function (err, origpath) {\n      if (err) return cb(err);\n      // change to destination path\n      self.cwd(path, function (err) {\n        if (err) return cb(err);\n        // get dir listing\n        self.list(zcomp || false, function (err, list) {\n          // change back to original path\n          if (err) return self.cwd(origpath, cb);\n          self.cwd(origpath, function (err) {\n            if (err) return cb(err);\n            cb(err, list);\n          });\n        });\n      });\n    });\n  } else this.list(path, zcomp, cb);\n};\nFTP.prototype.list = function (path, zcomp, cb) {\n  var self = this,\n    cmd;\n  if (typeof path === 'function') {\n    // list(function() {})\n    cb = path;\n    path = undefined;\n    cmd = 'LIST';\n    zcomp = false;\n  } else if (typeof path === 'boolean') {\n    // list(true, function() {})\n    cb = zcomp;\n    zcomp = path;\n    path = undefined;\n    cmd = 'LIST';\n  } else if (typeof zcomp === 'function') {\n    // list('/foo', function() {})\n    cb = zcomp;\n    cmd = 'LIST ' + path;\n    zcomp = false;\n  } else cmd = 'LIST ' + path;\n  this._pasv(function (err, sock) {\n    if (err) return cb(err);\n    if (self._queue[0] && self._queue[0].cmd === 'ABOR') {\n      sock.destroy();\n      return cb();\n    }\n    var sockerr,\n      done = false,\n      replies = 0,\n      entries,\n      buffer = '',\n      source = sock;\n    if (zcomp) {\n      source = zlib.createInflate();\n      sock.pipe(source);\n    }\n    source.on('data', function (chunk) {\n      buffer += chunk.toString('binary');\n    });\n    source.once('error', function (err) {\n      if (!sock.aborting) sockerr = err;\n    });\n    source.once('end', ondone);\n    source.once('close', ondone);\n    function ondone() {\n      done = true;\n      final();\n    }\n    function final() {\n      if (done && replies === 2) {\n        replies = 3;\n        if (sockerr) return cb(new Error('Unexpected data connection error: ' + sockerr));\n        if (sock.aborting) return cb();\n\n        // process received data\n        entries = buffer.split(RE_EOL);\n        entries.pop(); // ending EOL\n        var parsed = [];\n        for (var i = 0, len = entries.length; i < len; ++i) {\n          var parsedVal = Parser.parseListEntry(entries[i]);\n          if (parsedVal !== null) parsed.push(parsedVal);\n        }\n        if (zcomp) {\n          self._send('MODE S', function () {\n            cb(undefined, parsed);\n          }, true);\n        } else cb(undefined, parsed);\n      }\n    }\n    if (zcomp) {\n      self._send('MODE Z', function (err, text, code) {\n        if (err) {\n          sock.destroy();\n          return cb(makeError(code, 'Compression not supported'));\n        }\n        sendList();\n      }, true);\n    } else sendList();\n    function sendList() {\n      // this callback will be executed multiple times, the first is when server\n      // replies with 150 and then a final reply to indicate whether the\n      // transfer was actually a success or not\n      self._send(cmd, function (err, text, code) {\n        if (err) {\n          sock.destroy();\n          if (zcomp) {\n            self._send('MODE S', function () {\n              cb(err);\n            }, true);\n          } else cb(err);\n          return;\n        }\n\n        // some servers may not open a data connection for empty directories\n        if (++replies === 1 && code === 226) {\n          replies = 2;\n          sock.destroy();\n          final();\n        } else if (replies === 2) final();\n      }, true);\n    }\n  });\n};\nFTP.prototype.get = function (path, zcomp, cb) {\n  var self = this;\n  if (typeof zcomp === 'function') {\n    cb = zcomp;\n    zcomp = false;\n  }\n  this._pasv(function (err, sock) {\n    if (err) return cb(err);\n    if (self._queue[0] && self._queue[0].cmd === 'ABOR') {\n      sock.destroy();\n      return cb();\n    }\n\n    // modify behavior of socket events so that we can emit 'error' once for\n    // either a TCP-level error OR an FTP-level error response that we get when\n    // the socket is closed (e.g. the server ran out of space).\n    var sockerr,\n      started = false,\n      lastreply = false,\n      done = false,\n      source = sock;\n    if (zcomp) {\n      source = zlib.createInflate();\n      sock.pipe(source);\n      sock._emit = sock.emit;\n      sock.emit = function (ev, arg1) {\n        if (ev === 'error') {\n          if (!sockerr) sockerr = arg1;\n          return;\n        }\n        sock._emit.apply(sock, Array.prototype.slice.call(arguments));\n      };\n    }\n    source._emit = source.emit;\n    source.emit = function (ev, arg1) {\n      if (ev === 'error') {\n        if (!sockerr) sockerr = arg1;\n        return;\n      } else if (ev === 'end' || ev === 'close') {\n        if (!done) {\n          done = true;\n          ondone();\n        }\n        return;\n      }\n      source._emit.apply(source, Array.prototype.slice.call(arguments));\n    };\n    function ondone() {\n      if (done && lastreply) {\n        self._send('MODE S', function () {\n          source._emit('end');\n          source._emit('close');\n        }, true);\n      }\n    }\n    sock.pause();\n    if (zcomp) {\n      self._send('MODE Z', function (err, text, code) {\n        if (err) {\n          sock.destroy();\n          return cb(makeError(code, 'Compression not supported'));\n        }\n        sendRetr();\n      }, true);\n    } else sendRetr();\n    function sendRetr() {\n      // this callback will be executed multiple times, the first is when server\n      // replies with 150, then a final reply after the data connection closes\n      // to indicate whether the transfer was actually a success or not\n      self._send('RETR ' + path, function (err, text, code) {\n        if (sockerr || err) {\n          sock.destroy();\n          if (!started) {\n            if (zcomp) {\n              self._send('MODE S', function () {\n                cb(sockerr || err);\n              }, true);\n            } else cb(sockerr || err);\n          } else {\n            source._emit('error', sockerr || err);\n            source._emit('close', true);\n          }\n          return;\n        }\n        // server returns 125 when data connection is already open; we treat it\n        // just like a 150\n        if (code === 150 || code === 125) {\n          started = true;\n          cb(undefined, source);\n          sock.resume();\n        } else {\n          lastreply = true;\n          ondone();\n        }\n      }, true);\n    }\n  });\n};\nFTP.prototype.put = function (input, path, zcomp, cb) {\n  this._store('STOR ' + path, input, zcomp, cb);\n};\nFTP.prototype.append = function (input, path, zcomp, cb) {\n  this._store('APPE ' + path, input, zcomp, cb);\n};\nFTP.prototype.pwd = function (cb) {\n  // PWD is optional\n  var self = this;\n  this._send('PWD', function (err, text, code) {\n    if (code === 502) {\n      return self.cwd('.', function (cwderr, cwd) {\n        if (cwderr) return cb(cwderr);\n        if (cwd === undefined) cb(err);else cb(undefined, cwd);\n      }, true);\n    } else if (err) return cb(err);\n    cb(undefined, RE_WD.exec(text)[1]);\n  });\n};\nFTP.prototype.cdup = function (cb) {\n  // CDUP is optional\n  var self = this;\n  this._send('CDUP', function (err, text, code) {\n    if (code === 502) self.cwd('..', cb, true);else cb(err);\n  });\n};\nFTP.prototype.mkdir = function (path, recursive, cb) {\n  // MKD is optional\n  if (typeof recursive === 'function') {\n    cb = recursive;\n    recursive = false;\n  }\n  if (!recursive) this._send('MKD ' + path, cb);else {\n    var self = this,\n      owd,\n      abs,\n      dirs,\n      dirslen,\n      i = -1,\n      searching = true;\n    abs = path[0] === '/';\n    var nextDir = function () {\n      if (++i === dirslen) {\n        // return to original working directory\n        return self._send('CWD ' + owd, cb, true);\n      }\n      if (searching) {\n        self._send('CWD ' + dirs[i], function (err, text, code) {\n          if (code === 550) {\n            searching = false;\n            --i;\n          } else if (err) {\n            // return to original working directory\n            return self._send('CWD ' + owd, function () {\n              cb(err);\n            }, true);\n          }\n          nextDir();\n        }, true);\n      } else {\n        self._send('MKD ' + dirs[i], function (err, text, code) {\n          if (err) {\n            // return to original working directory\n            return self._send('CWD ' + owd, function () {\n              cb(err);\n            }, true);\n          }\n          self._send('CWD ' + dirs[i], nextDir, true);\n        }, true);\n      }\n    };\n    this.pwd(function (err, cwd) {\n      if (err) return cb(err);\n      owd = cwd;\n      if (abs) path = path.substr(1);\n      if (path[path.length - 1] === '/') path = path.substring(0, path.length - 1);\n      dirs = path.split('/');\n      dirslen = dirs.length;\n      if (abs) self._send('CWD /', function (err) {\n        if (err) return cb(err);\n        nextDir();\n      }, true);else nextDir();\n    });\n  }\n};\nFTP.prototype.rmdir = function (path, recursive, cb) {\n  // RMD is optional\n  if (typeof recursive === 'function') {\n    cb = recursive;\n    recursive = false;\n  }\n  if (!recursive) {\n    return this._send('RMD ' + path, cb);\n  }\n  var self = this;\n  this.list(path, function (err, list) {\n    if (err) return cb(err);\n    var idx = 0;\n\n    // this function will be called once per listing entry\n    var deleteNextEntry;\n    deleteNextEntry = function (err) {\n      if (err) return cb(err);\n      if (idx >= list.length) {\n        if (list[0] && list[0].name === path) {\n          return cb(null);\n        } else {\n          return self.rmdir(path, cb);\n        }\n      }\n      var entry = list[idx++];\n\n      // get the path to the file\n      var subpath = null;\n      if (entry.name[0] === '/') {\n        // this will be the case when you call deleteRecursively() and pass\n        // the path to a plain file\n        subpath = entry.name;\n      } else {\n        if (path[path.length - 1] == '/') {\n          subpath = path + entry.name;\n        } else {\n          subpath = path + '/' + entry.name;\n        }\n      }\n\n      // delete the entry (recursively) according to its type\n      if (entry.type === 'd') {\n        if (entry.name === \".\" || entry.name === \"..\") {\n          return deleteNextEntry();\n        }\n        self.rmdir(subpath, true, deleteNextEntry);\n      } else {\n        self.delete(subpath, deleteNextEntry);\n      }\n    };\n    deleteNextEntry();\n  });\n};\nFTP.prototype.system = function (cb) {\n  // SYST is optional\n  this._send('SYST', function (err, text) {\n    if (err) return cb(err);\n    cb(undefined, RE_SYST.exec(text)[1]);\n  });\n};\n\n// \"Extended\" (RFC 3659) commands\nFTP.prototype.size = function (path, cb) {\n  var self = this;\n  this._send('SIZE ' + path, function (err, text, code) {\n    if (code === 502) {\n      // Note: this may cause a problem as list() is _appended_ to the queue\n      return self.list(path, function (err, list) {\n        if (err) return cb(err);\n        if (list.length === 1) cb(undefined, list[0].size);else {\n          // path could have been a directory and we got a listing of its\n          // contents, but here we echo the behavior of the real SIZE and\n          // return 'File not found' for directories\n          cb(new Error('File not found'));\n        }\n      }, true);\n    } else if (err) return cb(err);\n    cb(undefined, parseInt(text, 10));\n  });\n};\nFTP.prototype.lastMod = function (path, cb) {\n  var self = this;\n  this._send('MDTM ' + path, function (err, text, code) {\n    if (code === 502) {\n      return self.list(path, function (err, list) {\n        if (err) return cb(err);\n        if (list.length === 1) cb(undefined, list[0].date);else cb(new Error('File not found'));\n      }, true);\n    } else if (err) return cb(err);\n    var val = XRegExp.exec(text, REX_TIMEVAL),\n      ret;\n    if (!val) return cb(new Error('Invalid date/time format from server'));\n    ret = new Date(val.year + '-' + val.month + '-' + val.date + 'T' + val.hour + ':' + val.minute + ':' + val.second);\n    cb(undefined, ret);\n  });\n};\nFTP.prototype.restart = function (offset, cb) {\n  this._send('REST ' + offset, cb);\n};\n\n// Private/Internal methods\nFTP.prototype._pasv = function (cb) {\n  var self = this,\n    first = true,\n    ip,\n    port;\n  this._send('PASV', function reentry(err, text) {\n    if (err) return cb(err);\n    self._curReq = undefined;\n    if (first) {\n      var m = RE_PASV.exec(text);\n      if (!m) return cb(new Error('Unable to parse PASV server response'));\n      ip = m[1];\n      ip += '.';\n      ip += m[2];\n      ip += '.';\n      ip += m[3];\n      ip += '.';\n      ip += m[4];\n      port = parseInt(m[5], 10) * 256 + parseInt(m[6], 10);\n      first = false;\n    }\n    self._pasvConnect(ip, port, function (err, sock) {\n      if (err) {\n        // try the IP of the control connection if the server was somehow\n        // misconfigured and gave for example a LAN IP instead of WAN IP over\n        // the Internet\n        if (self._socket && ip !== self._socket.remoteAddress) {\n          ip = self._socket.remoteAddress;\n          return reentry();\n        }\n\n        // automatically abort PASV mode\n        self._send('ABOR', function () {\n          cb(err);\n          self._send();\n        }, true);\n        return;\n      }\n      cb(undefined, sock);\n      self._send();\n    });\n  });\n};\nFTP.prototype._pasvConnect = function (ip, port, cb) {\n  var self = this,\n    socket = new Socket(),\n    sockerr,\n    timedOut = false,\n    timer = setTimeout(function () {\n      timedOut = true;\n      socket.destroy();\n      cb(new Error('Timed out while making data connection'));\n    }, this.options.pasvTimeout);\n  socket.setTimeout(0);\n  socket.once('connect', function () {\n    self._debug && self._debug('[connection] PASV socket connected');\n    if (self.options.secure === true) {\n      self.options.secureOptions.socket = socket;\n      self.options.secureOptions.session = self._socket.getSession();\n      //socket.removeAllListeners('error');\n      socket = tls.connect(self.options.secureOptions);\n      //socket.once('error', onerror);\n      socket.setTimeout(0);\n    }\n    clearTimeout(timer);\n    self._pasvSocket = socket;\n    cb(undefined, socket);\n  });\n  socket.once('error', onerror);\n  function onerror(err) {\n    sockerr = err;\n  }\n  socket.once('end', function () {\n    clearTimeout(timer);\n  });\n  socket.once('close', function (had_err) {\n    clearTimeout(timer);\n    if (!self._pasvSocket && !timedOut) {\n      var errmsg = 'Unable to make data connection';\n      if (sockerr) {\n        errmsg += '( ' + sockerr + ')';\n        sockerr = undefined;\n      }\n      cb(new Error(errmsg));\n    }\n    self._pasvSocket = undefined;\n  });\n  socket.connect(port, ip);\n};\nFTP.prototype._store = function (cmd, input, zcomp, cb) {\n  var isBuffer = Buffer.isBuffer(input);\n  if (!isBuffer && input.pause !== undefined) input.pause();\n  if (typeof zcomp === 'function') {\n    cb = zcomp;\n    zcomp = false;\n  }\n  var self = this;\n  this._pasv(function (err, sock) {\n    if (err) return cb(err);\n    if (self._queue[0] && self._queue[0].cmd === 'ABOR') {\n      sock.destroy();\n      return cb();\n    }\n    var sockerr,\n      dest = sock;\n    sock.once('error', function (err) {\n      sockerr = err;\n    });\n    if (zcomp) {\n      self._send('MODE Z', function (err, text, code) {\n        if (err) {\n          sock.destroy();\n          return cb(makeError(code, 'Compression not supported'));\n        }\n        // draft-preston-ftpext-deflate-04 says min of 8 should be supported\n        dest = zlib.createDeflate({\n          level: 8\n        });\n        dest.pipe(sock);\n        sendStore();\n      }, true);\n    } else sendStore();\n    function sendStore() {\n      // this callback will be executed multiple times, the first is when server\n      // replies with 150, then a final reply after the data connection closes\n      // to indicate whether the transfer was actually a success or not\n      self._send(cmd, function (err, text, code) {\n        if (sockerr || err) {\n          if (zcomp) {\n            self._send('MODE S', function () {\n              cb(sockerr || err);\n            }, true);\n          } else cb(sockerr || err);\n          return;\n        }\n        if (code === 150 || code === 125) {\n          if (isBuffer) dest.end(input);else if (typeof input === 'string') {\n            // check if input is a file path or just string data to store\n            fs.stat(input, function (err, stats) {\n              if (err) dest.end(input);else fs.createReadStream(input).pipe(dest);\n            });\n          } else {\n            input.pipe(dest);\n            input.resume();\n          }\n        } else {\n          if (zcomp) self._send('MODE S', cb, true);else cb();\n        }\n      }, true);\n    }\n  });\n};\nFTP.prototype._send = function (cmd, cb, promote) {\n  clearTimeout(this._keepalive);\n  if (cmd !== undefined) {\n    if (promote) this._queue.unshift({\n      cmd: cmd,\n      cb: cb\n    });else this._queue.push({\n      cmd: cmd,\n      cb: cb\n    });\n  }\n  var queueLen = this._queue.length;\n  if (!this._curReq && queueLen && this._socket && this._socket.readable) {\n    this._curReq = this._queue.shift();\n    if (this._curReq.cmd === 'ABOR' && this._pasvSocket) this._pasvSocket.aborting = true;\n    this._debug && this._debug('[connection] > ' + inspect(this._curReq.cmd));\n    this._socket.write(this._curReq.cmd + '\\r\\n');\n  } else if (!this._curReq && !queueLen && this._ending) this._reset();\n};\nFTP.prototype._reset = function () {\n  if (this._pasvSock && this._pasvSock.writable) this._pasvSock.end();\n  if (this._socket && this._socket.writable) this._socket.end();\n  this._socket = undefined;\n  this._pasvSock = undefined;\n  this._feat = undefined;\n  this._curReq = undefined;\n  this._secstate = undefined;\n  clearTimeout(this._keepalive);\n  this._keepalive = undefined;\n  this._queue = [];\n  this._ending = false;\n  this._parser = undefined;\n  this.options.host = this.options.port = this.options.user = this.options.password = this.options.secure = this.options.connTimeout = this.options.pasvTimeout = this.options.keepalive = this._debug = undefined;\n  this.connected = false;\n};\n\n// Utility functions\nfunction makeError(code, text) {\n  var err = new Error(text);\n  err.code = code;\n  return err;\n}","map":{"version":3,"names":["fs","require","tls","zlib","Socket","EventEmitter","inherits","inspect","Parser","XRegExp","REX_TIMEVAL","cache","RE_PASV","RE_EOL","RE_WD","RE_SYST","RETVAL","PRELIM","OK","WAITING","ERR_TEMP","ERR_PERM","bytesNOOP","Buffer","FTP","module","exports","_socket","undefined","_pasvSock","_feat","_curReq","_queue","_secstate","_debug","_keepalive","_ending","_parser","options","host","port","user","password","secure","secureOptions","connTimeout","pasvTimeout","aliveTimeout","connected","prototype","connect","self","keepalive","debug","socket","setTimeout","setKeepAlive","on","code","text","retval","cb","makeError","emit","_send","noopreq","k","onconnect","once","cmd","clearTimeout","donoop","writable","length","write","timer","reentry","err","end","parseFeat","substr","removeAllListeners","_decoder","session","setEncoding","ondata","onend","onerror","chunk","toString","ondone","had_err","hasReset","_reset","Error","destroy","ascii","binary","abort","immediate","cwd","path","promote","m","exec","delete","site","status","rename","from","to","logout","listSafe","zcomp","pwd","origpath","list","_pasv","sock","sockerr","done","replies","entries","buffer","source","createInflate","pipe","aborting","final","split","pop","parsed","i","len","parsedVal","parseListEntry","push","sendList","get","started","lastreply","_emit","ev","arg1","apply","Array","slice","call","arguments","pause","sendRetr","resume","put","input","_store","append","cwderr","cdup","mkdir","recursive","owd","abs","dirs","dirslen","searching","nextDir","substring","rmdir","idx","deleteNextEntry","name","entry","subpath","type","system","size","parseInt","lastMod","date","val","ret","Date","year","month","hour","minute","second","restart","offset","first","ip","_pasvConnect","remoteAddress","timedOut","getSession","_pasvSocket","errmsg","isBuffer","dest","createDeflate","level","sendStore","stat","stats","createReadStream","unshift","queueLen","readable","shift"],"sources":["/Users/sathyamurthyt/Documents/Ai-forms/form-wizard/node_modules/ftp/lib/connection.js"],"sourcesContent":["var fs = require('fs'),\n    tls = require('tls'),\n    zlib = require('zlib'),\n    Socket = require('net').Socket,\n    EventEmitter = require('events').EventEmitter,\n    inherits = require('util').inherits,\n    inspect = require('util').inspect;\n\nvar Parser = require('./parser');\nvar XRegExp = require('xregexp').XRegExp;\n\nvar REX_TIMEVAL = XRegExp.cache('^(?<year>\\\\d{4})(?<month>\\\\d{2})(?<date>\\\\d{2})(?<hour>\\\\d{2})(?<minute>\\\\d{2})(?<second>\\\\d+)(?:.\\\\d+)?$'),\n    RE_PASV = /([\\d]+),([\\d]+),([\\d]+),([\\d]+),([-\\d]+),([-\\d]+)/,\n    RE_EOL = /\\r?\\n/g,\n    RE_WD = /\"(.+)\"(?: |$)/,\n    RE_SYST = /^([^ ]+)(?: |$)/;\n\nvar /*TYPE = {\n      SYNTAX: 0,\n      INFO: 1,\n      SOCKETS: 2,\n      AUTH: 3,\n      UNSPEC: 4,\n      FILESYS: 5\n    },*/\n    RETVAL = {\n      PRELIM: 1,\n      OK: 2,\n      WAITING: 3,\n      ERR_TEMP: 4,\n      ERR_PERM: 5\n    },\n    /*ERRORS = {\n      421: 'Service not available, closing control connection',\n      425: 'Can\\'t open data connection',\n      426: 'Connection closed; transfer aborted',\n      450: 'Requested file action not taken / File unavailable (e.g., file busy)',\n      451: 'Requested action aborted: local error in processing',\n      452: 'Requested action not taken / Insufficient storage space in system',\n      500: 'Syntax error / Command unrecognized',\n      501: 'Syntax error in parameters or arguments',\n      502: 'Command not implemented',\n      503: 'Bad sequence of commands',\n      504: 'Command not implemented for that parameter',\n      530: 'Not logged in',\n      532: 'Need account for storing files',\n      550: 'Requested action not taken / File unavailable (e.g., file not found, no access)',\n      551: 'Requested action aborted: page type unknown',\n      552: 'Requested file action aborted / Exceeded storage allocation (for current directory or dataset)',\n      553: 'Requested action not taken / File name not allowed'\n    },*/\n    bytesNOOP = new Buffer('NOOP\\r\\n');\n\nvar FTP = module.exports = function() {\n  if (!(this instanceof FTP))\n    return new FTP();\n\n  this._socket = undefined;\n  this._pasvSock = undefined;\n  this._feat = undefined;\n  this._curReq = undefined;\n  this._queue = [];\n  this._secstate = undefined;\n  this._debug = undefined;\n  this._keepalive = undefined;\n  this._ending = false;\n  this._parser = undefined;\n  this.options = {\n    host: undefined,\n    port: undefined,\n    user: undefined,\n    password: undefined,\n    secure: false,\n    secureOptions: undefined,\n    connTimeout: undefined,\n    pasvTimeout: undefined,\n    aliveTimeout: undefined\n  };\n  this.connected = false;\n};\ninherits(FTP, EventEmitter);\n\nFTP.prototype.connect = function(options) {\n  var self = this;\n  if (typeof options !== 'object')\n    options = {};\n  this.connected = false;\n  this.options.host = options.host || 'localhost';\n  this.options.port = options.port || 21;\n  this.options.user = options.user || 'anonymous';\n  this.options.password = options.password || 'anonymous@';\n  this.options.secure = options.secure || false;\n  this.options.secureOptions = options.secureOptions;\n  this.options.connTimeout = options.connTimeout || 10000;\n  this.options.pasvTimeout = options.pasvTimeout || 10000;\n  this.options.aliveTimeout = options.keepalive || 10000;\n\n  if (typeof options.debug === 'function')\n    this._debug = options.debug;\n\n  var secureOptions,\n      debug = this._debug,\n      socket = new Socket();\n\n  socket.setTimeout(0);\n  socket.setKeepAlive(true);\n\n  this._parser = new Parser({ debug: debug });\n  this._parser.on('response', function(code, text) {\n    var retval = code / 100 >> 0;\n    if (retval === RETVAL.ERR_TEMP || retval === RETVAL.ERR_PERM) {\n      if (self._curReq)\n        self._curReq.cb(makeError(code, text), undefined, code);\n      else\n        self.emit('error', makeError(code, text));\n    } else if (self._curReq)\n      self._curReq.cb(undefined, text, code);\n\n    // a hack to signal we're waiting for a PASV data connection to complete\n    // first before executing any more queued requests ...\n    //\n    // also: don't forget our current request if we're expecting another\n    // terminating response ....\n    if (self._curReq && retval !== RETVAL.PRELIM) {\n      self._curReq = undefined;\n      self._send();\n    }\n\n    noopreq.cb();\n  });\n\n  if (this.options.secure) {\n    secureOptions = {};\n    secureOptions.host = this.options.host;\n    for (var k in this.options.secureOptions)\n      secureOptions[k] = this.options.secureOptions[k];\n    secureOptions.socket = socket;\n    this.options.secureOptions = secureOptions;\n  }\n\n  if (this.options.secure === 'implicit')\n    this._socket = tls.connect(secureOptions, onconnect);\n  else {\n    socket.once('connect', onconnect);\n    this._socket = socket;\n  }\n\n  var noopreq = {\n        cmd: 'NOOP',\n        cb: function() {\n          clearTimeout(self._keepalive);\n          self._keepalive = setTimeout(donoop, self.options.aliveTimeout);\n        }\n      };\n\n  function donoop() {\n    if (!self._socket || !self._socket.writable)\n      clearTimeout(self._keepalive);\n    else if (!self._curReq && self._queue.length === 0) {\n      self._curReq = noopreq;\n      debug&&debug('[connection] > NOOP');\n      self._socket.write(bytesNOOP);\n    } else\n      noopreq.cb();\n  }\n\n  function onconnect() {\n    clearTimeout(timer);\n    clearTimeout(self._keepalive);\n    self.connected = true;\n    self._socket = socket; // re-assign for implicit secure connections\n\n    var cmd;\n\n    if (self._secstate) {\n      if (self._secstate === 'upgraded-tls' && self.options.secure === true) {\n        cmd = 'PBSZ';\n        self._send('PBSZ 0', reentry, true);\n      } else {\n        cmd = 'USER';\n        self._send('USER ' + self.options.user, reentry, true);\n      }\n    } else {\n      self._curReq = {\n        cmd: '',\n        cb: reentry\n      };\n    }\n\n    function reentry(err, text, code) {\n      if (err && (!cmd || cmd === 'USER' || cmd === 'PASS' || cmd === 'TYPE')) {\n        self.emit('error', err);\n        return self._socket && self._socket.end();\n      }\n      if ((cmd === 'AUTH TLS' && code !== 234 && self.options.secure !== true)\n          || (cmd === 'AUTH SSL' && code !== 334)\n          || (cmd === 'PBSZ' && code !== 200)\n          || (cmd === 'PROT' && code !== 200)) {\n        self.emit('error', makeError(code, 'Unable to secure connection(s)'));\n        return self._socket && self._socket.end();\n      }\n\n      if (!cmd) {\n        // sometimes the initial greeting can contain useful information\n        // about authorized use, other limits, etc.\n        self.emit('greeting', text);\n\n        if (self.options.secure && self.options.secure !== 'implicit') {\n          cmd = 'AUTH TLS';\n          self._send(cmd, reentry, true);\n        } else {\n          cmd = 'USER';\n          self._send('USER ' + self.options.user, reentry, true);\n        }\n      } else if (cmd === 'USER') {\n        if (code !== 230) {\n          // password required\n          if (!self.options.password) {\n            self.emit('error', makeError(code, 'Password required'));\n            return self._socket && self._socket.end();\n          }\n          cmd = 'PASS';\n          self._send('PASS ' + self.options.password, reentry, true);\n        } else {\n          // no password required\n          cmd = 'PASS';\n          reentry(undefined, text, code);\n        }\n      } else if (cmd === 'PASS') {\n        cmd = 'FEAT';\n        self._send(cmd, reentry, true);\n      } else if (cmd === 'FEAT') {\n        if (!err)\n          self._feat = Parser.parseFeat(text);\n        cmd = 'TYPE';\n        self._send('TYPE I', reentry, true);\n      } else if (cmd === 'TYPE')\n        self.emit('ready');\n      else if (cmd === 'PBSZ') {\n        cmd = 'PROT';\n        self._send('PROT P', reentry, true);\n      } else if (cmd === 'PROT') {\n        cmd = 'USER';\n        self._send('USER ' + self.options.user, reentry, true);\n      } else if (cmd.substr(0, 4) === 'AUTH') {\n        if (cmd === 'AUTH TLS' && code !== 234) {\n          cmd = 'AUTH SSL';\n          return self._send(cmd, reentry, true);\n        } else if (cmd === 'AUTH TLS')\n          self._secstate = 'upgraded-tls';\n        else if (cmd === 'AUTH SSL')\n          self._secstate = 'upgraded-ssl';\n        socket.removeAllListeners('data');\n        socket.removeAllListeners('error');\n        socket._decoder = null;\n        self._curReq = null; // prevent queue from being processed during\n                             // TLS/SSL negotiation\n        secureOptions.socket = self._socket;\n        secureOptions.session = undefined;\n        socket = tls.connect(secureOptions, onconnect);\n        socket.setEncoding('binary');\n        socket.on('data', ondata);\n        socket.once('end', onend);\n        socket.on('error', onerror);\n      }\n    }\n  }\n\n  socket.on('data', ondata);\n  function ondata(chunk) {\n    debug&&debug('[connection] < ' + inspect(chunk.toString('binary')));\n    if (self._parser)\n      self._parser.write(chunk);\n  }\n\n  socket.on('error', onerror);\n  function onerror(err) {\n    clearTimeout(timer);\n    clearTimeout(self._keepalive);\n    self.emit('error', err);\n  }\n\n  socket.once('end', onend);\n  function onend() {\n    ondone();\n    self.emit('end');\n  }\n\n  socket.once('close', function(had_err) {\n    ondone();\n    self.emit('close', had_err);\n  });\n\n  var hasReset = false;\n  function ondone() {\n    if (!hasReset) {\n      hasReset = true;\n      clearTimeout(timer);\n      self._reset();\n    }\n  }\n\n  var timer = setTimeout(function() {\n    self.emit('error', new Error('Timeout while connecting to server'));\n    self._socket && self._socket.destroy();\n    self._reset();\n  }, this.options.connTimeout);\n\n  this._socket.connect(this.options.port, this.options.host);\n};\n\nFTP.prototype.end = function() {\n  if (this._queue.length)\n    this._ending = true;\n  else\n    this._reset();\n};\n\nFTP.prototype.destroy = function() {\n  this._reset();\n};\n\n// \"Standard\" (RFC 959) commands\nFTP.prototype.ascii = function(cb) {\n  return this._send('TYPE A', cb);\n};\n\nFTP.prototype.binary = function(cb) {\n  return this._send('TYPE I', cb);\n};\n\nFTP.prototype.abort = function(immediate, cb) {\n  if (typeof immediate === 'function') {\n    cb = immediate;\n    immediate = true;\n  }\n  if (immediate)\n    this._send('ABOR', cb, true);\n  else\n    this._send('ABOR', cb);\n};\n\nFTP.prototype.cwd = function(path, cb, promote) {\n  this._send('CWD ' + path, function(err, text, code) {\n    if (err)\n      return cb(err);\n    var m = RE_WD.exec(text);\n    cb(undefined, m ? m[1] : undefined);\n  }, promote);\n};\n\nFTP.prototype.delete = function(path, cb) {\n  this._send('DELE ' + path, cb);\n};\n\nFTP.prototype.site = function(cmd, cb) {\n  this._send('SITE ' + cmd, cb);\n};\n\nFTP.prototype.status = function(cb) {\n  this._send('STAT', cb);\n};\n\nFTP.prototype.rename = function(from, to, cb) {\n  var self = this;\n  this._send('RNFR ' + from, function(err) {\n    if (err)\n      return cb(err);\n\n    self._send('RNTO ' + to, cb, true);\n  });\n};\n\nFTP.prototype.logout = function(cb) {\n  this._send('QUIT', cb);\n};\n\nFTP.prototype.listSafe = function(path, zcomp, cb) {\n  if (typeof path === 'string') {\n    var self = this;\n    // store current path\n    this.pwd(function(err, origpath) {\n      if (err) return cb(err);\n      // change to destination path\n      self.cwd(path, function(err) {\n        if (err) return cb(err);\n        // get dir listing\n        self.list(zcomp || false, function(err, list) {\n          // change back to original path\n          if (err) return self.cwd(origpath, cb);\n          self.cwd(origpath, function(err) {\n            if (err) return cb(err);\n            cb(err, list);\n          });\n        });\n      });\n    });\n  } else\n    this.list(path, zcomp, cb);\n};\n\nFTP.prototype.list = function(path, zcomp, cb) {\n  var self = this, cmd;\n\n  if (typeof path === 'function') {\n    // list(function() {})\n    cb = path;\n    path = undefined;\n    cmd = 'LIST';\n    zcomp = false;\n  } else if (typeof path === 'boolean') {\n    // list(true, function() {})\n    cb = zcomp;\n    zcomp = path;\n    path = undefined;\n    cmd = 'LIST';\n  } else if (typeof zcomp === 'function') {\n    // list('/foo', function() {})\n    cb = zcomp;\n    cmd = 'LIST ' + path;\n    zcomp = false;\n  } else\n    cmd = 'LIST ' + path;\n\n  this._pasv(function(err, sock) {\n    if (err)\n      return cb(err);\n\n    if (self._queue[0] && self._queue[0].cmd === 'ABOR') {\n      sock.destroy();\n      return cb();\n    }\n\n    var sockerr, done = false, replies = 0, entries, buffer = '', source = sock;\n\n    if (zcomp) {\n      source = zlib.createInflate();\n      sock.pipe(source);\n    }\n\n    source.on('data', function(chunk) { buffer += chunk.toString('binary'); });\n    source.once('error', function(err) {\n      if (!sock.aborting)\n        sockerr = err;\n    });\n    source.once('end', ondone);\n    source.once('close', ondone);\n\n    function ondone() {\n      done = true;\n      final();\n    }\n    function final() {\n      if (done && replies === 2) {\n        replies = 3;\n        if (sockerr)\n          return cb(new Error('Unexpected data connection error: ' + sockerr));\n        if (sock.aborting)\n          return cb();\n\n        // process received data\n        entries = buffer.split(RE_EOL);\n        entries.pop(); // ending EOL\n        var parsed = [];\n        for (var i = 0, len = entries.length; i < len; ++i) {\n          var parsedVal = Parser.parseListEntry(entries[i]);\n          if (parsedVal !== null)\n            parsed.push(parsedVal);\n        }\n\n        if (zcomp) {\n          self._send('MODE S', function() {\n            cb(undefined, parsed);\n          }, true);\n        } else\n          cb(undefined, parsed);\n      }\n    }\n\n    if (zcomp) {\n      self._send('MODE Z', function(err, text, code) {\n        if (err) {\n          sock.destroy();\n          return cb(makeError(code, 'Compression not supported'));\n        }\n        sendList();\n      }, true);\n    } else\n      sendList();\n\n    function sendList() {\n      // this callback will be executed multiple times, the first is when server\n      // replies with 150 and then a final reply to indicate whether the\n      // transfer was actually a success or not\n      self._send(cmd, function(err, text, code) {\n        if (err) {\n          sock.destroy();\n          if (zcomp) {\n            self._send('MODE S', function() {\n              cb(err);\n            }, true);\n          } else\n            cb(err);\n          return;\n        }\n\n        // some servers may not open a data connection for empty directories\n        if (++replies === 1 && code === 226) {\n          replies = 2;\n          sock.destroy();\n          final();\n        } else if (replies === 2)\n          final();\n      }, true);\n    }\n  });\n};\n\nFTP.prototype.get = function(path, zcomp, cb) {\n  var self = this;\n  if (typeof zcomp === 'function') {\n    cb = zcomp;\n    zcomp = false;\n  }\n\n  this._pasv(function(err, sock) {\n    if (err)\n      return cb(err);\n\n    if (self._queue[0] && self._queue[0].cmd === 'ABOR') {\n      sock.destroy();\n      return cb();\n    }\n\n    // modify behavior of socket events so that we can emit 'error' once for\n    // either a TCP-level error OR an FTP-level error response that we get when\n    // the socket is closed (e.g. the server ran out of space).\n    var sockerr, started = false, lastreply = false, done = false,\n        source = sock;\n\n    if (zcomp) {\n      source = zlib.createInflate();\n      sock.pipe(source);\n      sock._emit = sock.emit;\n      sock.emit = function(ev, arg1) {\n        if (ev === 'error') {\n          if (!sockerr)\n            sockerr = arg1;\n          return;\n        }\n        sock._emit.apply(sock, Array.prototype.slice.call(arguments));\n      };\n    }\n\n    source._emit = source.emit;\n    source.emit = function(ev, arg1) {\n      if (ev === 'error') {\n        if (!sockerr)\n          sockerr = arg1;\n        return;\n      } else if (ev === 'end' || ev === 'close') {\n        if (!done) {\n          done = true;\n          ondone();\n        }\n        return;\n      }\n      source._emit.apply(source, Array.prototype.slice.call(arguments));\n    };\n\n    function ondone() {\n      if (done && lastreply) {\n        self._send('MODE S', function() {\n          source._emit('end');\n          source._emit('close');\n        }, true);\n      }\n    }\n\n    sock.pause();\n\n    if (zcomp) {\n      self._send('MODE Z', function(err, text, code) {\n        if (err) {\n          sock.destroy();\n          return cb(makeError(code, 'Compression not supported'));\n        }\n        sendRetr();\n      }, true);\n    } else\n      sendRetr();\n\n    function sendRetr() {\n      // this callback will be executed multiple times, the first is when server\n      // replies with 150, then a final reply after the data connection closes\n      // to indicate whether the transfer was actually a success or not\n      self._send('RETR ' + path, function(err, text, code) {\n        if (sockerr || err) {\n          sock.destroy();\n          if (!started) {\n            if (zcomp) {\n              self._send('MODE S', function() {\n                cb(sockerr || err);\n              }, true);\n            } else\n              cb(sockerr || err);\n          } else {\n            source._emit('error', sockerr || err);\n            source._emit('close', true);\n          }\n          return;\n        }\n        // server returns 125 when data connection is already open; we treat it\n        // just like a 150\n        if (code === 150 || code === 125) {\n          started = true;\n          cb(undefined, source);\n          sock.resume();\n        } else {\n          lastreply = true;\n          ondone();\n        }\n      }, true);\n    }\n  });\n};\n\nFTP.prototype.put = function(input, path, zcomp, cb) {\n  this._store('STOR ' + path, input, zcomp, cb);\n};\n\nFTP.prototype.append = function(input, path, zcomp, cb) {\n  this._store('APPE ' + path, input, zcomp, cb);\n};\n\nFTP.prototype.pwd = function(cb) { // PWD is optional\n  var self = this;\n  this._send('PWD', function(err, text, code) {\n    if (code === 502) {\n      return self.cwd('.', function(cwderr, cwd) {\n        if (cwderr)\n          return cb(cwderr);\n        if (cwd === undefined)\n          cb(err);\n        else\n          cb(undefined, cwd);\n      }, true);\n    } else if (err)\n      return cb(err);\n    cb(undefined, RE_WD.exec(text)[1]);\n  });\n};\n\nFTP.prototype.cdup = function(cb) { // CDUP is optional\n  var self = this;\n  this._send('CDUP', function(err, text, code) {\n    if (code === 502)\n      self.cwd('..', cb, true);\n    else\n      cb(err);\n  });\n};\n\nFTP.prototype.mkdir = function(path, recursive, cb) { // MKD is optional\n  if (typeof recursive === 'function') {\n    cb = recursive;\n    recursive = false;\n  }\n  if (!recursive)\n    this._send('MKD ' + path, cb);\n  else {\n    var self = this, owd, abs, dirs, dirslen, i = -1, searching = true;\n\n    abs = (path[0] === '/');\n\n    var nextDir = function() {\n      if (++i === dirslen) {\n        // return to original working directory\n        return self._send('CWD ' + owd, cb, true);\n      }\n      if (searching) {\n        self._send('CWD ' + dirs[i], function(err, text, code) {\n          if (code === 550) {\n            searching = false;\n            --i;\n          } else if (err) {\n            // return to original working directory\n            return self._send('CWD ' + owd, function() {\n              cb(err);\n            }, true);\n          }\n          nextDir();\n        }, true);\n      } else {\n        self._send('MKD ' + dirs[i], function(err, text, code) {\n          if (err) {\n            // return to original working directory\n            return self._send('CWD ' + owd, function() {\n              cb(err);\n            }, true);\n          }\n          self._send('CWD ' + dirs[i], nextDir, true);\n        }, true);\n      }\n    };\n    this.pwd(function(err, cwd) {\n      if (err)\n        return cb(err);\n      owd = cwd;\n      if (abs)\n        path = path.substr(1);\n      if (path[path.length - 1] === '/')\n        path = path.substring(0, path.length - 1);\n      dirs = path.split('/');\n      dirslen = dirs.length;\n      if (abs)\n        self._send('CWD /', function(err) {\n          if (err)\n            return cb(err);\n          nextDir();\n        }, true);\n      else\n        nextDir();\n    });\n  }\n};\n\nFTP.prototype.rmdir = function(path, recursive, cb) { // RMD is optional\n  if (typeof recursive === 'function') {\n    cb = recursive;\n    recursive = false;\n  }\n  if (!recursive) {\n    return this._send('RMD ' + path, cb);\n  }\n  \n  var self = this;\n  this.list(path, function(err, list) {\n    if (err) return cb(err);\n    var idx = 0;\n    \n    // this function will be called once per listing entry\n    var deleteNextEntry;\n    deleteNextEntry = function(err) {\n      if (err) return cb(err);\n      if (idx >= list.length) {\n        if (list[0] && list[0].name === path) {\n          return cb(null);\n        } else {\n          return self.rmdir(path, cb);\n        }\n      }\n      \n      var entry = list[idx++];\n      \n      // get the path to the file\n      var subpath = null;\n      if (entry.name[0] === '/') {\n        // this will be the case when you call deleteRecursively() and pass\n        // the path to a plain file\n        subpath = entry.name;\n      } else {\n        if (path[path.length - 1] == '/') {\n          subpath = path + entry.name;\n        } else {\n          subpath = path + '/' + entry.name\n        }\n      }\n      \n      // delete the entry (recursively) according to its type\n      if (entry.type === 'd') {\n        if (entry.name === \".\" || entry.name === \"..\") {\n          return deleteNextEntry();\n        }\n        self.rmdir(subpath, true, deleteNextEntry);\n      } else {\n        self.delete(subpath, deleteNextEntry);\n      }\n    }\n    deleteNextEntry();\n  });\n};\n\nFTP.prototype.system = function(cb) { // SYST is optional\n  this._send('SYST', function(err, text) {\n    if (err)\n      return cb(err);\n    cb(undefined, RE_SYST.exec(text)[1]);\n  });\n};\n\n// \"Extended\" (RFC 3659) commands\nFTP.prototype.size = function(path, cb) {\n  var self = this;\n  this._send('SIZE ' + path, function(err, text, code) {\n    if (code === 502) {\n      // Note: this may cause a problem as list() is _appended_ to the queue\n      return self.list(path, function(err, list) {\n        if (err)\n          return cb(err);\n        if (list.length === 1)\n          cb(undefined, list[0].size);\n        else {\n          // path could have been a directory and we got a listing of its\n          // contents, but here we echo the behavior of the real SIZE and\n          // return 'File not found' for directories\n          cb(new Error('File not found'));\n        }\n      }, true);\n    } else if (err)\n      return cb(err);\n    cb(undefined, parseInt(text, 10));\n  });\n};\n\nFTP.prototype.lastMod = function(path, cb) {\n  var self = this;\n  this._send('MDTM ' + path, function(err, text, code) {\n    if (code === 502) {\n      return self.list(path, function(err, list) {\n        if (err)\n          return cb(err);\n        if (list.length === 1)\n          cb(undefined, list[0].date);\n        else\n          cb(new Error('File not found'));\n      }, true);\n    } else if (err)\n      return cb(err);\n    var val = XRegExp.exec(text, REX_TIMEVAL), ret;\n    if (!val)\n      return cb(new Error('Invalid date/time format from server'));\n    ret = new Date(val.year + '-' + val.month + '-' + val.date + 'T' + val.hour\n                   + ':' + val.minute + ':' + val.second);\n    cb(undefined, ret);\n  });\n};\n\nFTP.prototype.restart = function(offset, cb) {\n  this._send('REST ' + offset, cb);\n};\n\n\n\n// Private/Internal methods\nFTP.prototype._pasv = function(cb) {\n  var self = this, first = true, ip, port;\n  this._send('PASV', function reentry(err, text) {\n    if (err)\n      return cb(err);\n\n    self._curReq = undefined;\n\n    if (first) {\n      var m = RE_PASV.exec(text);\n      if (!m)\n        return cb(new Error('Unable to parse PASV server response'));\n      ip = m[1];\n      ip += '.';\n      ip += m[2];\n      ip += '.';\n      ip += m[3];\n      ip += '.';\n      ip += m[4];\n      port = (parseInt(m[5], 10) * 256) + parseInt(m[6], 10);\n\n      first = false;\n    }\n    self._pasvConnect(ip, port, function(err, sock) {\n      if (err) {\n        // try the IP of the control connection if the server was somehow\n        // misconfigured and gave for example a LAN IP instead of WAN IP over\n        // the Internet\n        if (self._socket && ip !== self._socket.remoteAddress) {\n          ip = self._socket.remoteAddress;\n          return reentry();\n        }\n\n        // automatically abort PASV mode\n        self._send('ABOR', function() {\n          cb(err);\n          self._send();\n        }, true);\n\n        return;\n      }\n      cb(undefined, sock);\n      self._send();\n    });\n  });\n};\n\nFTP.prototype._pasvConnect = function(ip, port, cb) {\n  var self = this,\n      socket = new Socket(),\n      sockerr,\n      timedOut = false,\n      timer = setTimeout(function() {\n        timedOut = true;\n        socket.destroy();\n        cb(new Error('Timed out while making data connection'));\n      }, this.options.pasvTimeout);\n\n  socket.setTimeout(0);\n\n  socket.once('connect', function() {\n    self._debug&&self._debug('[connection] PASV socket connected');\n    if (self.options.secure === true) {\n      self.options.secureOptions.socket = socket;\n      self.options.secureOptions.session = self._socket.getSession();\n      //socket.removeAllListeners('error');\n      socket = tls.connect(self.options.secureOptions);\n      //socket.once('error', onerror);\n      socket.setTimeout(0);\n    }\n    clearTimeout(timer);\n    self._pasvSocket = socket;\n    cb(undefined, socket);\n  });\n  socket.once('error', onerror);\n  function onerror(err) {\n    sockerr = err;\n  }\n  socket.once('end', function() {\n    clearTimeout(timer);\n  });\n  socket.once('close', function(had_err) {\n    clearTimeout(timer);\n    if (!self._pasvSocket && !timedOut) {\n      var errmsg = 'Unable to make data connection';\n      if (sockerr) {\n        errmsg += '( ' + sockerr + ')';\n        sockerr = undefined;\n      }\n      cb(new Error(errmsg));\n    }\n    self._pasvSocket = undefined;\n  });\n\n  socket.connect(port, ip);\n};\n\nFTP.prototype._store = function(cmd, input, zcomp, cb) {\n  var isBuffer = Buffer.isBuffer(input);\n\n  if (!isBuffer && input.pause !== undefined)\n    input.pause();\n\n  if (typeof zcomp === 'function') {\n    cb = zcomp;\n    zcomp = false;\n  }\n\n  var self = this;\n  this._pasv(function(err, sock) {\n    if (err)\n      return cb(err);\n\n    if (self._queue[0] && self._queue[0].cmd === 'ABOR') {\n      sock.destroy();\n      return cb();\n    }\n\n    var sockerr, dest = sock;\n    sock.once('error', function(err) {\n      sockerr = err;\n    });\n\n    if (zcomp) {\n      self._send('MODE Z', function(err, text, code) {\n        if (err) {\n          sock.destroy();\n          return cb(makeError(code, 'Compression not supported'));\n        }\n        // draft-preston-ftpext-deflate-04 says min of 8 should be supported\n        dest = zlib.createDeflate({ level: 8 });\n        dest.pipe(sock);\n        sendStore();\n      }, true);\n    } else\n      sendStore();\n\n    function sendStore() {\n      // this callback will be executed multiple times, the first is when server\n      // replies with 150, then a final reply after the data connection closes\n      // to indicate whether the transfer was actually a success or not\n      self._send(cmd, function(err, text, code) {\n        if (sockerr || err) {\n          if (zcomp) {\n            self._send('MODE S', function() {\n              cb(sockerr || err);\n            }, true);\n          } else\n            cb(sockerr || err);\n          return;\n        }\n\n        if (code === 150 || code === 125) {\n          if (isBuffer)\n            dest.end(input);\n          else if (typeof input === 'string') {\n            // check if input is a file path or just string data to store\n            fs.stat(input, function(err, stats) {\n              if (err)\n                dest.end(input);\n              else\n                fs.createReadStream(input).pipe(dest);\n            });\n          } else {\n            input.pipe(dest);\n            input.resume();\n          }\n        } else {\n          if (zcomp)\n            self._send('MODE S', cb, true);\n          else\n            cb();\n        }\n      }, true);\n    }\n  });\n};\n\nFTP.prototype._send = function(cmd, cb, promote) {\n  clearTimeout(this._keepalive);\n  if (cmd !== undefined) {\n    if (promote)\n      this._queue.unshift({ cmd: cmd, cb: cb });\n    else\n      this._queue.push({ cmd: cmd, cb: cb });\n  }\n  var queueLen = this._queue.length;\n  if (!this._curReq && queueLen && this._socket && this._socket.readable) {\n    this._curReq = this._queue.shift();\n    if (this._curReq.cmd === 'ABOR' && this._pasvSocket)\n      this._pasvSocket.aborting = true;\n    this._debug&&this._debug('[connection] > ' + inspect(this._curReq.cmd));\n    this._socket.write(this._curReq.cmd + '\\r\\n');\n  } else if (!this._curReq && !queueLen && this._ending)\n    this._reset();\n};\n\nFTP.prototype._reset = function() {\n  if (this._pasvSock && this._pasvSock.writable)\n    this._pasvSock.end();\n  if (this._socket && this._socket.writable)\n    this._socket.end();\n  this._socket = undefined;\n  this._pasvSock = undefined;\n  this._feat = undefined;\n  this._curReq = undefined;\n  this._secstate = undefined;\n  clearTimeout(this._keepalive);\n  this._keepalive = undefined;\n  this._queue = [];\n  this._ending = false;\n  this._parser = undefined;\n  this.options.host = this.options.port = this.options.user\n                    = this.options.password = this.options.secure\n                    = this.options.connTimeout = this.options.pasvTimeout\n                    = this.options.keepalive = this._debug = undefined;\n  this.connected = false;\n};\n\n// Utility functions\nfunction makeError(code, text) {\n  var err = new Error(text);\n  err.code = code;\n  return err;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}