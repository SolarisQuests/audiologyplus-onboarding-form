{"ast":null,"code":"import mailgun from 'mailgun-js';\nimport PDFDocument from 'pdfkit';\nconst mg = mailgun({\n  apiKey: process.env.MAILGUN_API_KEY,\n  domain: process.env.MAILGUN_DOMAIN\n});\nconst generatePDF = formData => {\n  return new Promise((resolve, reject) => {\n    const doc = new PDFDocument();\n    let buffers = [];\n    doc.on('data', buffers.push.bind(buffers));\n    doc.on('end', () => {\n      let pdfData = Buffer.concat(buffers);\n      resolve(pdfData);\n    });\n\n    // Add form data to PDF\n    doc.fontSize(16).text('Onboarding Form Entries', {\n      align: 'center'\n    });\n    doc.moveDown();\n    Object.entries(formData).forEach(([key, value]) => {\n      doc.fontSize(12).text(`${key}: ${value}`);\n      doc.moveDown();\n    });\n    doc.end();\n  });\n};\nconst generateTermsAndConditionsPDF = () => {\n  return new Promise((resolve, reject) => {\n    const doc = new PDFDocument();\n    let buffers = [];\n    doc.on('data', buffers.push.bind(buffers));\n    doc.on('end', () => {\n      let pdfData = Buffer.concat(buffers);\n      resolve(pdfData);\n    });\n    doc.fontSize(16).text('Terms and Conditions', {\n      align: 'center'\n    });\n    doc.moveDown();\n    doc.fontSize(12).text('Your terms and conditions text goes here...');\n    doc.end();\n  });\n};\nexport const sendEmail = async formData => {\n  const formEntriesPDF = await generatePDF(formData);\n  const termsAndConditionsPDF = await generateTermsAndConditionsPDF();\n  const data = {\n    from: 'Audiology Plus <onboarding@audiologyplus.com>',\n    to: formData.email,\n    subject: 'Welcome to Audiology Plus - Your Onboarding Information',\n    text: `Dear ${formData.name},\n\nThank you for completing the Audiology Plus onboarding process. We're excited to have you join our family!\n\nAttached to this email, you'll find two important documents:\n1. A summary of the information you provided during the onboarding process.\n2. Our terms and conditions document.\n\nPlease review these documents and keep them for your records. If you have any questions or need to make any changes, please don't hesitate to contact us.\n\nWe look forward to working with you and helping your practice thrive.\n\nBest regards,\nThe Audiology Plus Team`,\n    attachment: [{\n      data: formEntriesPDF,\n      filename: 'onboarding_summary.pdf'\n    }, {\n      data: termsAndConditionsPDF,\n      filename: 'terms_and_conditions.pdf'\n    }]\n  };\n  return new Promise((resolve, reject) => {\n    mg.messages().send(data, (error, body) => {\n      if (error) {\n        reject(error);\n      } else {\n        resolve(body);\n      }\n    });\n  });\n};","map":{"version":3,"names":["mailgun","PDFDocument","mg","apiKey","process","env","MAILGUN_API_KEY","domain","MAILGUN_DOMAIN","generatePDF","formData","Promise","resolve","reject","doc","buffers","on","push","bind","pdfData","Buffer","concat","fontSize","text","align","moveDown","Object","entries","forEach","key","value","end","generateTermsAndConditionsPDF","sendEmail","formEntriesPDF","termsAndConditionsPDF","data","from","to","email","subject","name","attachment","filename","messages","send","error","body"],"sources":["/Users/sathyamurthyt/Documents/Ai-forms/form-wizard/src/utils/emailService.js"],"sourcesContent":["import mailgun from 'mailgun-js';\nimport PDFDocument from 'pdfkit';\n\nconst mg = mailgun({apiKey: process.env.MAILGUN_API_KEY, domain: process.env.MAILGUN_DOMAIN});\n\nconst generatePDF = (formData) => {\n  return new Promise((resolve, reject) => {\n    const doc = new PDFDocument();\n    let buffers = [];\n    doc.on('data', buffers.push.bind(buffers));\n    doc.on('end', () => {\n      let pdfData = Buffer.concat(buffers);\n      resolve(pdfData);\n    });\n\n    // Add form data to PDF\n    doc.fontSize(16).text('Onboarding Form Entries', {align: 'center'});\n    doc.moveDown();\n    Object.entries(formData).forEach(([key, value]) => {\n      doc.fontSize(12).text(`${key}: ${value}`);\n      doc.moveDown();\n    });\n\n    doc.end();\n  });\n};\n\nconst generateTermsAndConditionsPDF = () => {\n  return new Promise((resolve, reject) => {\n    const doc = new PDFDocument();\n    let buffers = [];\n    doc.on('data', buffers.push.bind(buffers));\n    doc.on('end', () => {\n      let pdfData = Buffer.concat(buffers);\n      resolve(pdfData);\n    });\n\n    doc.fontSize(16).text('Terms and Conditions', {align: 'center'});\n    doc.moveDown();\n    doc.fontSize(12).text('Your terms and conditions text goes here...');\n\n    doc.end();\n  });\n};\n\nexport const sendEmail = async (formData) => {\n  const formEntriesPDF = await generatePDF(formData);\n  const termsAndConditionsPDF = await generateTermsAndConditionsPDF();\n\n  const data = {\n    from: 'Audiology Plus <onboarding@audiologyplus.com>',\n    to: formData.email,\n    subject: 'Welcome to Audiology Plus - Your Onboarding Information',\n    text: `Dear ${formData.name},\n\nThank you for completing the Audiology Plus onboarding process. We're excited to have you join our family!\n\nAttached to this email, you'll find two important documents:\n1. A summary of the information you provided during the onboarding process.\n2. Our terms and conditions document.\n\nPlease review these documents and keep them for your records. If you have any questions or need to make any changes, please don't hesitate to contact us.\n\nWe look forward to working with you and helping your practice thrive.\n\nBest regards,\nThe Audiology Plus Team`,\n    attachment: [\n      {data: formEntriesPDF, filename: 'onboarding_summary.pdf'},\n      {data: termsAndConditionsPDF, filename: 'terms_and_conditions.pdf'}\n    ]\n  };\n\n  return new Promise((resolve, reject) => {\n    mg.messages().send(data, (error, body) => {\n      if (error) {\n        reject(error);\n      } else {\n        resolve(body);\n      }\n    });\n  });\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}