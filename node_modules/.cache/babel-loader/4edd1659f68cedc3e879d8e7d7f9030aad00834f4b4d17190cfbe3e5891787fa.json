{"ast":null,"code":"let iconv;\ntry {\n  iconv = require('iconv-lite');\n} catch (error) {}\nclass DecodeStream {\n  constructor(buffer) {\n    this.buffer = buffer;\n    this.pos = 0;\n    this.length = this.buffer.length;\n  }\n  readString(length, encoding = 'ascii') {\n    switch (encoding) {\n      case 'utf16le':\n      case 'ucs2':\n      case 'utf8':\n      case 'ascii':\n        return this.buffer.toString(encoding, this.pos, this.pos += length);\n      case 'utf16be':\n        var buf = Buffer.from(this.readBuffer(length));\n\n        // swap the bytes\n        for (let i = 0, end = buf.length - 1; i < end; i += 2) {\n          const byte = buf[i];\n          buf[i] = buf[i + 1];\n          buf[i + 1] = byte;\n        }\n        return buf.toString('utf16le');\n      default:\n        buf = this.readBuffer(length);\n        if (iconv) {\n          try {\n            return iconv.decode(buf, encoding);\n          } catch (error1) {}\n        }\n        return buf;\n    }\n  }\n  readBuffer(length) {\n    return this.buffer.slice(this.pos, this.pos += length);\n  }\n  readUInt24BE() {\n    return (this.readUInt16BE() << 8) + this.readUInt8();\n  }\n  readUInt24LE() {\n    return this.readUInt16LE() + (this.readUInt8() << 16);\n  }\n  readInt24BE() {\n    return (this.readInt16BE() << 8) + this.readUInt8();\n  }\n  readInt24LE() {\n    return this.readUInt16LE() + (this.readInt8() << 16);\n  }\n}\nDecodeStream.TYPES = {\n  UInt8: 1,\n  UInt16: 2,\n  UInt24: 3,\n  UInt32: 4,\n  Int8: 1,\n  Int16: 2,\n  Int24: 3,\n  Int32: 4,\n  Float: 4,\n  Double: 8\n};\nfor (let key in Buffer.prototype) {\n  if (key.slice(0, 4) === 'read') {\n    const bytes = DecodeStream.TYPES[key.replace(/read|[BL]E/g, '')];\n    DecodeStream.prototype[key] = function () {\n      const ret = this.buffer[key](this.pos);\n      this.pos += bytes;\n      return ret;\n    };\n  }\n}\nmodule.exports = DecodeStream;","map":{"version":3,"names":["iconv","require","error","DecodeStream","constructor","buffer","pos","length","readString","encoding","toString","buf","Buffer","from","readBuffer","i","end","byte","decode","error1","slice","readUInt24BE","readUInt16BE","readUInt8","readUInt24LE","readUInt16LE","readInt24BE","readInt16BE","readInt24LE","readInt8","TYPES","UInt8","UInt16","UInt24","UInt32","Int8","Int16","Int24","Int32","Float","Double","key","prototype","bytes","replace","ret","module","exports"],"sources":["/Users/sathyamurthyt/Documents/Ai-forms/form-wizard/node_modules/pdfkit/node_modules/restructure/src/DecodeStream.js"],"sourcesContent":["let iconv;\ntry { iconv = require('iconv-lite'); } catch (error) {}\n\nclass DecodeStream {\n  constructor(buffer) {\n    this.buffer = buffer;\n    this.pos = 0;\n    this.length = this.buffer.length;\n  }\n\n  readString(length, encoding = 'ascii') {\n    switch (encoding) {\n      case 'utf16le': case 'ucs2': case 'utf8': case 'ascii':\n        return this.buffer.toString(encoding, this.pos, (this.pos += length));\n\n      case 'utf16be':\n        var buf = Buffer.from(this.readBuffer(length));\n\n        // swap the bytes\n        for (let i = 0, end = buf.length - 1; i < end; i += 2) {\n          const byte = buf[i];\n          buf[i] = buf[i + 1];\n          buf[i + 1] = byte;\n        }\n\n        return buf.toString('utf16le');\n\n      default:\n        buf = this.readBuffer(length);\n        if (iconv) {\n          try {\n            return iconv.decode(buf, encoding);\n          } catch (error1) {}\n        }\n\n        return buf;\n    }\n  }\n\n  readBuffer(length) {\n    return this.buffer.slice(this.pos, (this.pos += length));\n  }\n\n  readUInt24BE() {\n    return (this.readUInt16BE() << 8) + this.readUInt8();\n  }\n\n  readUInt24LE() {\n    return this.readUInt16LE() + (this.readUInt8() << 16);\n  }\n\n  readInt24BE() {\n    return (this.readInt16BE() << 8) + this.readUInt8();\n  }\n\n  readInt24LE() {\n    return this.readUInt16LE() + (this.readInt8() << 16);\n  }\n}\n\nDecodeStream.TYPES = {\n  UInt8: 1,\n  UInt16: 2,\n  UInt24: 3,\n  UInt32: 4,\n  Int8: 1,\n  Int16: 2,\n  Int24: 3,\n  Int32: 4,\n  Float: 4,\n  Double: 8\n};\n\nfor (let key in Buffer.prototype) {\n  if (key.slice(0, 4) === 'read') {\n    const bytes = DecodeStream.TYPES[key.replace(/read|[BL]E/g, '')];\n    DecodeStream.prototype[key] = function() {\n      const ret = this.buffer[key](this.pos);\n      this.pos += bytes;\n      return ret;\n    };\n  }\n}\n\nmodule.exports = DecodeStream;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}